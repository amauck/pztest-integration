{
	"id": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
	"name": "Text_Ingest",
	"description": "",
	"order": [
		"37a131f9-0a6c-ea5d-605b-ef41961df7bd",
		"42168281-26a9-b32d-9135-1691db2bb814",
		"5bed549c-f434-b6eb-0fe6-bff0e765bbdf",
		"bc8849d2-3459-b846-6446-e53fd0b56975",
		"b34dd1bc-9c76-6dc4-4dbd-3fb739ae5eba",
		"dcb5ba71-ce10-d06d-9b6c-f294fa136e9c",
		"03774790-7a1c-5055-2caf-cdba5565786b",
		"16fd384e-677c-d1cc-f9f5-3ee1d2b8e77d",
		"7b371e32-170f-825b-87ec-ea70878de1e9",
		"81f68c77-fd22-1d8d-9c3d-9b5d91e9e386",
		"d4d7af28-248e-8b58-cf7f-3a070d54c613",
		"fc3e623c-d99b-5395-2dec-4469c2a21fc0",
		"62682f61-12ef-574c-357d-aaa89bd6f802",
		"6330c3cf-f511-c1f5-fdd0-28603df59b84",
		"1f3db52d-0e60-a353-e207-631fc88042d7",
		"0010829a-97fc-5ab9-e9ee-e64baa213fbe"
	],
	"folders": [],
	"timestamp": 1467215962212,
	"owner": "699425",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "0010829a-97fc-5ab9-e9ee-e64baa213fbe",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/data",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message field present in output\"] = true;\n    tests[\"'Can not deserialize' message\"] = data.message.has('not deserialize');\n    tests[\"'START_ARRAY' token specified\"] = data.message.has('START_ARRAY token');\n}\nelse {\n    tests[\"message field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469121328157,
			"name": "Ingest Array as Text",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n    \"dataType\": {\r\n        \"content\": [\"text\"],\r\n        \"type\": \"text\"\r\n    },\r\n    \"metadata\": {\r\n        \"description\": \"STRING2SEARCH_BY\"\r\n    }\r\n  },\r\n  \"host\": false,\r\n  \"type\": \"ingest\"\r\n}"
		},
		{
			"id": "03774790-7a1c-5055-2caf-cdba5565786b",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"Deletion Successful\"] = data.type === 'success';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('message') && typeof data.data.message === 'string') {\n        tests[\"data.message string field present in output\"] = true;\n        tests[\"Correct dataId used\"] = data.data.message.has(postman.getEnvironmentVariable('dataId'));\n    }\n    else {\n        tests[\"data.message string field present in output\"] = false;\n    }\n}\n// if (data.hasOwnProperty('message') && typeof data.message === 'string') {\n//     tests[\"message field present in output\"] = true;\n//     tests[\"Correct dataId used\"] = data.message.has(postman.getEnvironmentVariable('dataId'));\n// }\n// else {\n//     tests[\"message field present in output\"] = false;\n// }",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469121180887,
			"name": "Delete Ingested Text",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "16fd384e-677c-d1cc-f9f5-3ee1d2b8e77d",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"Deletion Successful\"] = data.type === 'error';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message field present in output\"] = true;\n    tests[\"Correct dataId used\"] = data.message.has(postman.getEnvironmentVariable('dataId'));\n    tests[\"'not found' error.\"] = data.message.has('not found');\n}\nelse {\n    tests[\"message field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469121214198,
			"name": "Cannot Delete Again",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "1f3db52d-0e60-a353-e207-631fc88042d7",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/data",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message field present in output\"] = true;\n    tests[\"'Can not deserialize' message\"] = data.message.has('not deserialize');\n    tests[\"'START_OBJECT' token specified\"] = data.message.has('START_OBJECT token');\n}\nelse {\n    tests[\"message field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469121330500,
			"name": "Ingest Object as Text",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n    \"dataType\": {\r\n        \"content\": {},\r\n        \"type\": \"text\"\r\n    },\r\n    \"metadata\": {\r\n        \"description\": \"STRING2SEARCH_BY\"\r\n    }\r\n  },\r\n  \"host\": false,\r\n  \"type\": \"ingest\"\r\n}"
		},
		{
			"id": "37a131f9-0a6c-ea5d-605b-ef41961df7bd",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Says Hello!\"] = responseBody.has('Hello');\npostman.setEnvironmentVariable('jobId','');\npostman.setEnvironmentVariable('dataId','');\npostman.setEnvironmentVariable('text description','\"Search String: ' + Math.random() + '\"');",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470056230188,
			"name": "Hello, pz-gateway!",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "42168281-26a9-b32d-9135-1691db2bb814",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/data",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "function pausecomp(millis)\n{\n    var date = new Date();\n    var curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n}\ntests[\"Status code is 200 or 201\"] = responseCode.code === 200 || responseCode.code === 201;  // Fix once stage returns 201 on POSTs.\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('jobId') && typeof data.data.jobId === 'string') {\n        tests[\"data.jobId string field present in output\"] = true;\n        tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n        pausecomp(5000);\n    }\n    else {\n        tests[\"data.jobId string field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}\n// if (data.hasOwnProperty('jobId')) {\n//     tests[\"jobId field present in output\"] = true;\n//     tests[\"GUID created for jobId\"] = data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n//     postman.setEnvironmentVariable(\"jobId\",data.jobId);\n//     pausecomp(5000);\n// }\n// else {\n//     tests[\"jobId field present in output\"] = false;\n// }\npostman.setEnvironmentVariable('text description',postman.getEnvironmentVariable('text description').replace(/\"/g,'')); // Remove quotes from serviceId for later tests.",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470056230661,
			"name": "Ingest Text Data",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n    \"dataType\": {\r\n        \"content\": \"The string goes here!\",\r\n        \"type\": \"text\"\r\n    },\r\n    \"metadata\": {\r\n        \"description\": {{text description}}\r\n    }\r\n  },\r\n  \"host\": false,\r\n  \"type\": \"ingest\"\r\n}"
		},
		{
			"id": "5bed549c-f434-b6eb-0fe6-bff0e765bbdf",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('status')) {\n        tests[\"data.status field present in output\"] = true;\n        tests[\"Job Successful\"] = data.data.status === 'Success';\n    }\n    else {\n        tests[\"data.status field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('result')) {\n        tests[\"data.result field present in output\"] = true;\n        if (data.data.result.hasOwnProperty('dataId') && typeof data.data.result.dataId === 'string') {\n            tests[\"data.result.dataId string field present in output\"] = true;\n            tests[\"GUID created for dataId\"] = data.data.result.dataId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n            postman.setEnvironmentVariable(\"dataId\", data.data.result.dataId);\n        }\n        else {\n            tests[\"data.result.dataId string field present in output\"] = false;\n        }\n    }\n    else {\n        tests[\"data.result field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470056231163,
			"name": "Check Job Status",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "62682f61-12ef-574c-357d-aaa89bd6f802",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/data",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 415\"] = responseCode.code === 415;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469121336216,
			"name": "Ingest w/o Content type",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n    \"dataType\": {\r\n        \"content\": \"The string goes here!\",\r\n        \"type\": \"text\"\r\n    },\r\n    \"metadata\": {\r\n        \"description\": \"STRING2SEARCH_BY\"\r\n    }\r\n  },\r\n  \"host\": false,\r\n  \"type\": \"ingest\"\r\n}"
		},
		{
			"id": "6330c3cf-f511-c1f5-fdd0-28603df59b84",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/data",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message field present in output\"] = true;\n    tests[\"'Could not resolve type id' message\"] = data.message.has('Could not resolve type id');\n}\nelse {\n    tests[\"message field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469121333515,
			"name": "Ingest w/o Specifying Data Type Id",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n    \"dataType\": {\r\n        \"content\": \"The string goes here!\",\r\n        \"type\": \"\"\r\n    },\r\n    \"metadata\": {\r\n        \"description\": \"STRING2SEARCH_BY\"\r\n    }\r\n  },\r\n  \"host\": false,\r\n  \"type\": \"ingest\"\r\n}"
		},
		{
			"id": "7b371e32-170f-825b-87ec-ea70878de1e9",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/data?keyword=STRING2SEARCH_BY",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('pagination') && data.pagination.hasOwnProperty('count') && typeof data.pagination.count === 'number' && data.pagination.hasOwnProperty('perPage') && typeof data.pagination.perPage === 'number') {\n    tests[\"pagination field (and count/per_page number sub-fields) present in output\"] = true;\n    tests[\"No matches\"] = data.pagination.count === 0;\n}\nelse {\n    tests[\"pagination field (and count/perPage sub-fields) present in output\"] = false;\n}\nif (data.hasOwnProperty('data') && Array.isArray(data.data)) {\n    tests[\"data array field present in output\"] = true;\n    tests[\"data is empty\"] = data.data.length === 0;\n}\nelse{\n    tests[\"data array field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469121239833,
			"name": "Cannot find Deleted Data by Query",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "81f68c77-fd22-1d8d-9c3d-9b5d91e9e386",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"Deletion Successful\"] = data.type === 'error';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message field present in output\"] = true;\n    tests[\"Correct dataId used\"] = data.message.has(postman.getEnvironmentVariable('dataId'));\n    tests[\"'not found' error.\"] = data.message.has('not found');\n}\nelse {\n    tests[\"message field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469121276002,
			"name": "Cannot Read from Deleted Data",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "b34dd1bc-9c76-6dc4-4dbd-3fb739ae5eba",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/data?keyword={{text description}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('pagination') && data.pagination.hasOwnProperty('count') && typeof data.pagination.count === 'number' && data.pagination.hasOwnProperty('perPage') && typeof data.pagination.perPage === 'number') {\n    tests[\"pagination field (and count/per_page number sub-fields) present in output\"] = true;\n    tests[\"Exactly 1 match\"] = data.pagination.count === 1;\n}\nelse {\n    tests[\"pagination field (and count/perPage sub-fields) present in output\"] = false;\n}\nif (data.hasOwnProperty('data') && Array.isArray(data.data) && data.data.length > 0) {\n    tests[\"data array field present in output and is not empty\"] = true;\n    if (data.data[0].hasOwnProperty('dataId')) {\n        tests[\"data[0].dataId field present in output\"] = true;\n        tests[\"Same dataId returned\"] = data.data[0].dataId === postman.getEnvironmentVariable('dataId');\n    }\n    else {\n        tests[\"data[0].dataId field present in output\"] = false;\n    }\n}\nelse{\n    tests[\"data array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470258423746,
			"name": "Find Ingested Text by query",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "bc8849d2-3459-b846-6446-e53fd0b56975",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('dataId')) {\n        tests[\"data.dataId field present in output\"] = true;\n        tests[\"Same dataId returned\"] = data.data.dataId === postman.getEnvironmentVariable('dataId');\n    }\n    else {\n        tests[\"data.dataId field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('dataType')) {\n        tests[\"data.dataType field present in output\"] = true;\n        if (data.data.dataType.hasOwnProperty('content')) {\n            tests[\"data.dataType.content field present in output\"] = true;\n            tests[\"The returned text matches original text\"] = data.data.dataType.content === 'The string goes here!';\n        }\n        else {\n            tests[\"data.dataType.content field present in output\"] = false;\n        }\n    }\n    else {\n        tests[\"data.dataType field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470918993141,
			"name": "Read Ingested Text",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "d4d7af28-248e-8b58-cf7f-3a070d54c613",
			"headers": "Authorization: Basic V1JPTkc6V1JPTkc=\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/data",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "WRONG",
				"password": "WRONG",
				"saveToRequest": true
			},
			"time": 1467224817085,
			"name": "Ingest w/ bad Auth",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n    \"dataType\": {\r\n        \"content\": \"The string goes here!\",\r\n        \"type\": \"text\"\r\n    },\r\n    \"metadata\": {\r\n        \"description\": \"STRING2SEARCH_BY\"\r\n    }\r\n  },\r\n  \"host\": false,\r\n  \"type\": \"ingest\"\r\n}"
		},
		{
			"id": "dcb5ba71-ce10-d06d-9b6c-f294fa136e9c",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/data/me?perPage=1000&order=desc&sortBy=metadata.createdOn",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar found = false;\nvar all_by_me = true;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data') && Array.isArray(data.data) && data.data.length > 0) {\n    tests[\"data array field present in output and is not empty\"] = true;\n    for (i = 0; i < data.data.length; i++) {\n        if (data.data[i].hasOwnProperty('dataId')) {\n            tests[\"data[].dataId field present in output\"] = true;\n            if (data.data[i].dataId === postman.getEnvironmentVariable('dataId')) {\n                found = true;\n            }\n        }\n        else {\n            tests[\"data[].dataId field present in output\"] = false;\n            break;\n        }\n        if (data.data[i].hasOwnProperty('metadata')) {\n            tests[\"data[].metadata field present in output\"] = true;\n            if (data.data[i].metadata.hasOwnProperty('createdBy')) {\n                tests[\"data[].metadata.createdBy field present in output\"] = true;\n                if (data.data[i].metadata.createdBy != 'citester') {\n                    all_by_me = false;\n                    break;\n                }\n            }\n            else {\n                tests[\"data[].metadata.createdBy field present in output\"] = false;\n                break;\n            }\n        }\n        else {\n            tests[\"data[].metadata field present in output\"] = false;\n            break;\n        }\n    }\n    tests[\"dataId found\"] = found;\n    tests[\"All results created by me\"] = all_by_me;\n}\nelse {\n    tests[\"data array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470931961863,
			"name": "Query My Data",
			"description": "",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"responses": []
		},
		{
			"id": "fc3e623c-d99b-5395-2dec-4469c2a21fc0",
			"headers": "Content-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/data",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "d5346ef6-474e-c54d-5cc2-c136ea44fc23",
			"data": [],
			"dataMode": "raw",
			"name": "Ingest w/o Auth",
			"description": "",
			"descriptionFormat": "html",
			"time": 1467224887240,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n  \"data\": {\r\n    \"dataType\": {\r\n        \"content\": \"The string goes here!\",\r\n        \"type\": \"text\"\r\n    },\r\n    \"metadata\": {\r\n        \"description\": \"STRING2SEARCH_BY\"\r\n    }\r\n  },\r\n  \"host\": false,\r\n  \"type\": \"ingest\"\r\n}"
		}
	]
}