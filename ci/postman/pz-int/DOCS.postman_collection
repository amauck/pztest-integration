{
	"id": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
	"name": "DOCS",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "669bac9e-835a-ebc9-6f65-b15230a4b8da",
			"name": "Section 2. Hello, Piazza!",
			"description": "",
			"order": [
				"d3ff8dc3-12af-3800-6232-9bc98c631e1a"
			],
			"owner": "699425"
		},
		{
			"id": "21098f6f-88ae-4399-e0c3-fe0c81b571c1",
			"name": "Section 3. Data Load and Access",
			"description": "",
			"order": [
				"1bbbd321-8ad8-6b20-035f-300028d96f63",
				"0987931f-0b4b-35d4-2a44-0ae85749dfde",
				"687faae8-6372-692a-6a21-86c625aaa5d1",
				"432ff118-0a53-2909-27b4-b1dfb7463b7e",
				"d96256f9-e618-41a0-dc5b-ffa419c4516e",
				"9b567861-8488-d713-97b6-86a8488333b2",
				"b460a815-8fa2-2953-def9-af65101d6ad5",
				"5768b126-f391-9d4a-6e3b-57f57f73d893",
				"6a7a4f92-2807-7e14-19f2-8687e5cb955f",
				"32e4a795-54eb-6a1f-4444-777c0867f1c4",
				"cf46202d-f0c0-b971-30d1-8afffd58e14e",
				"1fb77758-f541-1125-fff9-1c7a44ef8e92"
			],
			"owner": "699425",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed"
		},
		{
			"id": "062f2a0f-6a3f-54dd-d048-a786d3a82742",
			"name": "Section 4. Search",
			"description": "",
			"order": [
				"f457f428-2e42-91f4-e42f-84848d5e8232",
				"bcfbc9d1-59e2-f5aa-15c9-83cf1612cd7d",
				"9389bc09-5909-6f8a-2278-293a91775b06",
				"9b7e39a7-db36-0001-0ced-54dda46ba049",
				"e4a810dc-7e08-7e97-f97b-11b399214b45",
				"7b92bcad-f23c-dc6d-8f7c-7f4895f82563",
				"f2b865f8-80c9-e00e-06e6-43bac0815d51",
				"2e420bb9-b242-4032-1119-d61e8c934470"
			],
			"owner": "699425",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed"
		},
		{
			"id": "a6a0ca8b-b079-dbc0-db1a-8a8a3a76e10b",
			"name": "Section 5. User Services",
			"description": "",
			"order": [
				"6cbe8eda-17e5-067a-9fbe-f260b828f05f",
				"c3715706-bb6f-f4e2-c9bf-3244aa35bff8",
				"98da9545-05e9-6bdd-42d4-d966e74b83b2",
				"b23d9e85-df29-dc3c-7c2d-66f41c7baad6",
				"22fde587-346c-836c-d9c1-68f3299c469f",
				"c0b199ab-fb86-fb69-0366-79288e6a1be0",
				"aee09261-7a83-0248-e42a-0c4d6d0c45f9",
				"1a18ae25-72e0-92f1-f9e0-06456f748d17"
			],
			"owner": "699425",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed"
		},
		{
			"id": "2e06587d-fa43-44e5-782c-0b9a09d1934a",
			"name": "Section 6. Workflow Service",
			"description": "",
			"order": [
				"285c63ff-8512-0178-717f-11fb522349b1",
				"d5bd1afe-f5a0-2bd1-d721-027231fd2a64",
				"e20c6623-3a37-b817-9ecf-12b523e48982",
				"ea108573-73f7-bf01-8296-a9c15341ecd1",
				"783dfe1b-9d67-7553-f324-097906793ebb",
				"4af781db-19b8-5f0b-4ccf-a5ae334d6a4b"
			],
			"owner": "699425"
		},
		{
			"id": "0591de3e-0111-70e6-1d89-fb1941d4fc01",
			"name": "Section 7. End-to-End Example",
			"description": "",
			"order": [
				"a19110bf-67dd-73dd-f250-8b45aa505954",
				"016511ed-8455-435c-af9c-8333d815a615",
				"7597e40d-fc8b-8e72-6f0c-be8d9967fbcd",
				"def0e477-0009-826a-4f4c-96fa4cb1d116"
			],
			"owner": "699425"
		},
		{
			"id": "f6780332-19ae-d33f-64cd-4a941185987b",
			"name": "ZZZ - Cleanup!",
			"description": "",
			"order": [
				"8d7f129b-8cab-492d-d3ac-5fa95123866f",
				"ad7f51cb-94d2-8fd8-8a16-0551834199c9",
				"41e2ad39-20ad-e47b-1ddc-bbb463bbc2c1",
				"83e7adff-8865-5b6b-7087-282466307c73",
				"9ccfb508-8622-7b97-4ab6-2fadbb53e4e4",
				"8f86e963-1089-7243-1478-27342828e68b",
				"09c3df42-abdf-a333-f356-436da8518593",
				"b6da0c36-e233-1375-e4ea-4a37561ab91e",
				"0886e74c-7499-084e-80e8-cba65e4aebc5",
				"418a08c8-25c7-99a6-fcf7-494d59c1d4df",
				"4ab60791-bf40-6455-6e58-4ffa2df0f737",
				"a513d386-6e84-ff44-8e93-7a5ccaf84904",
				"09c902f2-f476-bf65-7f52-36a7fa358b07",
				"16ae9325-0228-e7d3-5722-1810dd3fa953",
				"feabfe52-897d-802d-7d0e-18bd8766b72b"
			],
			"owner": "699425",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed"
		}
	],
	"timestamp": 0,
	"owner": "699425",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "016511ed-8455-435c-af9c-8333d815a615",
			"headers": "Content-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475775820153,
			"name": "7.3 Execute Preview Generator",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\r\n    \"type\": \"execute-service\",\r\n    \"data\": {\r\n        \"serviceId\": \"{{serviceId_prev}}\",\r\n        \"dataInputs\": {\r\n            \"test\": {\r\n                \"content\": \"{ \\\"source\\\": { \\\"domain\\\": \\\"s3.amazonaws.com\\\", \\\"bucketName\\\": \\\"pz-svcs-prevgen\\\", \\\"fileName\\\": \\\"NASA-GDEM-10km-colorized.tif\\\" }, \\\"function\\\": \\\"crop\\\", \\\"bounds\\\": { \\\"minx\\\": -140.00, \\\"miny\\\": 10.00, \\\"maxx\\\": -60.00, \\\"maxy\\\": 70.00 } }\",\r\n                \"type\": \"body\",\r\n                \"mimeType\": \"application/json\"\r\n            }\r\n        },\r\n        \"dataOutput\": [ {\r\n            \"mimeType\":\"image/tiff\",\r\n            \"type\":\"raster\"\r\n        } ]\r\n    }\r\n}"
		},
		{
			"id": "0886e74c-7499-084e-80e8-cba65e4aebc5",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_cropped}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475776638042,
			"name": "Delete Cropped Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "0987931f-0b4b-35d4-2a44-0ae85749dfde",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('3.1 Status of Local Image');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_local\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286622699,
			"name": "3.1 Status of Local Image",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "09c3df42-abdf-a333-f356-436da8518593",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_exec_serv_get}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770651055,
			"name": "Delete Service GET Output Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "09c902f2-f476-bf65-7f52-36a7fa358b07",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/event/{{eventId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770938941,
			"name": "Delete Event",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "16ae9325-0228-e7d3-5722-1810dd3fa953",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/trigger/{{triggerId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar wait = eval(postman.getEnvironmentVariable('wait'));\n\nwait(5000);",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475785365101,
			"name": "Delete Trigger",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "1a18ae25-72e0-92f1-f9e0-06456f748d17",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": " https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.resourceMetadata.availability')) {\n    tests[\"Service was taken OFFLINE\"] = data.data.resourceMetadata.availability === 'OFFLINE';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475696859260,
			"name": "5.5.7 Check that Service is Unavailable",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\r\n  \"resourceMetadata\" : {\r\n    \"availability\" : \"OFFLINE\"\r\n  }\r\n}"
		},
		{
			"id": "1bbbd321-8ad8-6b20-035f-300028d96f63",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/file",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "data",
					"value": "{ \"type\": \"ingest\", \"host\": \"true\", \"data\" : { \"dataType\": { \"type\": \"raster\" }, \"metadata\": { \"name\": \"terrametrics.tif\", \"description\": \"Testing the DOCS\" } } }",
					"type": "text",
					"enabled": true
				},
				{
					"key": "file",
					"value": "terrametrics.tif",
					"type": "file",
					"enabled": true
				}
			],
			"dataMode": "params",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475694066712,
			"name": "3.1.1 Loading a Local Image",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "1fb77758-f541-1125-fff9-1c7a44ef8e92",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/file/{{dataId_geo}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475785871050,
			"name": "3.3 Get GeoJSON file",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "22fde587-346c-836c-d9c1-68f3299c469f",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}\n\nconsole.log(' ~~~ There are no examples in DOCS regarding a registered service accessible by a POST ~~~ ');",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475697839058,
			"name": "5.3.1 Invoke Hello Example Service with POST",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\r\n    \"type\": \"execute-service\",\r\n    \"data\": {\r\n        \"serviceId\": \"{{serviceId}}\",\r\n        \"dataInputs\": {\r\n            \"test\" : {\r\n                \"content\" : \"{ \\\"name\\\": \\\"Fred\\\", \\\"count\\\": 4 }\",\r\n                \"type\" : \"body\",\r\n                \"mimeType\" : \"application/json\"\r\n            }\r\n        },\r\n        \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }]\r\n    }\r\n}"
		},
		{
			"id": "285c63ff-8512-0178-717f-11fb522349b1",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/eventType",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\n\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.eventTypeId')) {\n    postman.setEnvironmentVariable('eventTypeId', data.data.eventTypeId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475767980064,
			"name": "6.1 Create EventType",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"testevent-{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"filename\":\t\"string\",\r\n\t\t\"code\":\t\t\"string\",\r\n\t\t\"severity\":\t\"integer\"\r\n\t}\r\n}"
		},
		{
			"id": "2e420bb9-b242-4032-1119-d61e8c934470",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/data/query",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_dog = false;\nvar found_fox = false;\nvar found_hippo = false;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'dataId', 'skip', 'data[].')) {\n            if (data.data[i].dataId === postman.getEnvironmentVariable('dataId_dog')) {\n                found_dog = true;\n            }\n            if (data.data[i].dataId === postman.getEnvironmentVariable('dataId_fox')) {\n                found_fox = true;\n            }\n            if (data.data[i].dataId === postman.getEnvironmentVariable('dataId_hippo')) {\n                found_hippo = true;\n            }\n        }\n    }\n}\n\ntests[\"Data with 'fox' found. (Correct Search Term)\"] = found_fox;\ntests[\"Data with 'dog' not found. (Wrong Search Term)\"] = !found_dog;\ntests[\"Data with 'hippo' not found. (Wrong Search Term)\"] = !found_hippo;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475693040099,
			"name": "4.3 Query Example: fox",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\n    \"query\": {\n        \"match\": {\n            \"_all\": \"fox\"\n        }\n    }\n}"
		},
		{
			"id": "32e4a795-54eb-6a1f-4444-777c0867f1c4",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('3.3 Status of GeoJSON');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_geo\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286641524,
			"name": "3.3 Status of GeoJSON",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "418a08c8-25c7-99a6-fcf7-494d59c1d4df",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770778095,
			"name": "Delete Service",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "41e2ad39-20ad-e47b-1ddc-bbb463bbc2c1",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_geo}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770511682,
			"name": "Delete GeoJSON Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "432ff118-0a53-2909-27b4-b1dfb7463b7e",
			"headers": "Authorization: Basic e3tBUEkgS2V5fX06\n",
			"url": "https://pz-gateway.{{domain}}/file/{{dataId_local}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475785845806,
			"name": "3.1.2 Get Image File",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "4ab60791-bf40-6455-6e58-4ffa2df0f737",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId_prev}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475776577459,
			"name": "Delete Preview Generator Service",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "4af781db-19b8-5f0b-4ccf-a5ae334d6a4b",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/alert?triggerId={{triggerId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar dummy = {}; // dummy testing variable to get info if it exists.\n\nif (testLevels(dummy, data, 'data', 'array')) {\n    tests[\"There is only one.\"] = data.data.length === 1;\n    if (testLevels(tests, data.data[0], 'eventId')) {\n        tests[\"Correct 'eventId' displayed.\"] = data.data[0].eventId = postman.getEnvironmentVariable('eventId');\n    }\n    if (testLevels(tests, data.data[0], 'triggerId')) {\n        tests[\"Correct 'triggerId' displayed.\"] = data.data[0].triggerId = postman.getEnvironmentVariable('triggerId');\n    }\n    postman.setEnvironmentVariable('retry_loop', 0);\n}\nelse if (postman.getEnvironmentVariable('retry_loop') < 10) {\n    postman.setNextRequest('6.4 Find Alert');\n    postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n    wait(1000);\n}\nelse {\n    tests[\"Alert Generated\"] = false;\n    postman.setEnvironmentVariable('retry_loop', 0);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770191135,
			"name": "6.4 Find Alert",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "5768b126-f391-9d4a-6e3b-57f57f73d893",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('3.2 Status of External Ingest');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_ext\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286636772,
			"name": "3.2 Status of External Ingest",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "687faae8-6372-692a-6a21-86c625aaa5d1",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_local}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475785859272,
			"name": "3.1.1 Get Image Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "6a7a4f92-2807-7e14-19f2-8687e5cb955f",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/file",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "data",
					"value": "{ \"type\": \"ingest\", \"host\": \"true\", \"data\" : { \"dataType\": { \"type\": \"geojson\" }, \"metadata\": { \"name\": \"Test.geojson\", \"description\": \"Testing the DOCS\" } } }",
					"type": "text",
					"enabled": true
				},
				{
					"key": "file",
					"value": "Test.geojson",
					"type": "file",
					"enabled": true
				}
			],
			"dataMode": "params",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475694072870,
			"name": "3.3 Loading a GeoJSON File",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "6cbe8eda-17e5-067a-9fbe-f260b828f05f",
			"headers": "Content-Type: application/json\nsize: 30\nfrom: 0\nkey: stamp\norder: true\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.serviceId')) {\n    postman.setEnvironmentVariable(\"serviceId\",data.data.serviceId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476188010254,
			"name": "5.2.1 Register Hello Example Service",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\n    \"url\": \"https://pzsvc-hello.{{domain}}/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"method\" : \"GET\",\n    \"isAsynchronous\" : \"false\",\n    \"resourceMetadata\": {\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"Hello World Example\",\n        \"classType\": {\n            \"classification\": \"UNCLASSIFIED\"\n         }\n    }\n}"
		},
		{
			"id": "7597e40d-fc8b-8e72-6f0c-be8d9967fbcd",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < 30) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('7.4 Retrieve Job Status');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_cropped\", data.data.result.dataId);\n            wait(1000);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286701602,
			"name": "7.4 Retrieve Job Status",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "783dfe1b-9d67-7553-f324-097906793ebb",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/event",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\n\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.eventId')) {\n    postman.setEnvironmentVariable('eventId', data.data.eventId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475767920696,
			"name": "6.3 Create Event",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\r\n    \"eventTypeId\": \"{{eventTypeId}}\",\r\n    \"data\": {\r\n        \"filename\": \"test\",\r\n        \"severity\": 200,\r\n        \"code\": \"us-bbox\"\r\n    }\r\n}"
		},
		{
			"id": "7b92bcad-f23c-dc6d-8f7c-7f4895f82563",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('4.1 Status: hippo');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_hippo\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286657955,
			"name": "4.1 Status: hippo",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "83e7adff-8865-5b6b-7087-282466307c73",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_fox}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770567341,
			"name": "Delete Fox Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "8d7f129b-8cab-492d-d3ac-5fa95123866f",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_ext}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770484697,
			"name": "Delete External Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "8f86e963-1089-7243-1478-27342828e68b",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_hippo}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770593163,
			"name": "Delete Hippo Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "9389bc09-5909-6f8a-2278-293a91775b06",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/file",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "data",
					"value": "{ \"type\": \"ingest\", \"host\": \"true\", \"data\" : { \"dataType\": { \"type\": \"raster\" }, \"metadata\": { \"name\": \"terrametrics.tif\", \"description\": \"The lazy dog.\" } } }",
					"type": "text",
					"enabled": true
				},
				{
					"key": "file",
					"value": "terrametrics.tif",
					"type": "file",
					"enabled": true
				}
			],
			"dataMode": "params",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475694090073,
			"name": "4.1 Setup: dog",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "98da9545-05e9-6bdd-42d4-d966e74b83b2",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('5.3.3 Invoked service Job Status GET');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_exec_serv_get\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286678210,
			"name": "5.3.3 Invoked service Job Status GET",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "9b567861-8488-d713-97b6-86a8488333b2",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('3.1.2 WMS Deployment Status');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.deployment.deploymentId')) {\n            postman.setEnvironmentVariable(\"deploymentId\",data.data.result.deployment.deploymentId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286631480,
			"name": "3.1.2 WMS Deployment Status",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "9b7e39a7-db36-0001-0ced-54dda46ba049",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('4.1 Status: dog');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_dog\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286651297,
			"name": "4.1 Status: dog",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "9ccfb508-8622-7b97-4ab6-2fadbb53e4e4",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_dog}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770537833,
			"name": "Delete Dog Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"folder": "f6780332-19ae-d33f-64cd-4a941185987b"
		},
		{
			"id": "a19110bf-67dd-73dd-f250-8b45aa505954",
			"headers": "Content-Type: application/json\nsize: 30\nfrom: 0\nkey: stamp\norder: true\nAuthorization: Basic e3tBUEkgS2V5fX06\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.serviceId')) {\n    postman.setEnvironmentVariable(\"serviceId_prev\",data.data.serviceId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475776062895,
			"name": "7.2 Register Preview Generator",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\r\n    \"url\": \"https://pz-svcs-prevgen.{{domain}}/crop\",\r\n    \"method\": \"POST\",\r\n    \"contractUrl\": \"http://example.com/contract\",\r\n    \"resourceMetadata\": {\r\n        \"name\": \"Preview Generator\",\r\n        \"description\": \"Service that takes payload containing S3 location and bounding box for some raster file, downloads, crops and uploads the crop back up to s3.\",\r\n        \"classType\": \"unclassified\"\r\n    }\r\n}"
		},
		{
			"id": "a513d386-6e84-ff44-8e93-7a5ccaf84904",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/deployment/{{deploymentId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770888774,
			"name": "Delete Deployment",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "ad7f51cb-94d2-8fd8-8a16-0551834199c9",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_local}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770719076,
			"name": "Delete Local Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "aee09261-7a83-0248-e42a-0c4d6d0c45f9",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": " https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475696718045,
			"name": "5.5.7 Make Service Unavailable",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\r\n  \"resourceMetadata\" : {\r\n    \"availability\" : \"OFFLINE\"\r\n  }\r\n}"
		},
		{
			"id": "b23d9e85-df29-dc3c-7c2d-66f41c7baad6",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_exec_serv_get}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.dataType.content', 'string')) {\n    tests[\"Hello Service was executed\"] = data.data.dataType.content.match(/h(ello|i)/i);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475769343049,
			"name": "5.3.3 Invoked Hello Example Service Result",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "b460a815-8fa2-2953-def9-af65101d6ad5",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475697922824,
			"name": "3.2 Ingest External Raster",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\n  \"type\": \"ingest\",\n  \"host\": \"false\",\n  \"data\": {\n    \"dataType\": {\n      \"type\": \"raster\",\n      \"location\": {\n        \"type\": \"s3\",\n        \"bucketName\": \"external-public-access-test\",\n        \"fileName\": \"elevation.tif\",\n        \"domainName\": \"s3.amazonaws.com\"\n      }\n    },\n    \"metadata\": {\n      \"name\": \"My Test raster external file\",\n      \"description\": \"This is a test.\",\n      \"classType\": \"unclassified\"\n    }\n  }\n}"
		},
		{
			"id": "b6da0c36-e233-1375-e4ea-4a37561ab91e",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_exec_serv_post}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770684572,
			"name": "Delete Service POST Output Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "bcfbc9d1-59e2-f5aa-15c9-83cf1612cd7d",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('4.1 Status: fox');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_fox\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286662650,
			"name": "4.1 Status: fox",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "c0b199ab-fb86-fb69-0366-79288e6a1be0",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('5.3.3 Invoked service Job Status POST');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_exec_serv_post\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476286688290,
			"name": "5.3.3 Invoked service Job Status POST",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "c3715706-bb6f-f4e2-c9bf-3244aa35bff8",
			"headers": "Content-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475698027883,
			"name": "5.3.1 Invoke Hello Example Service with GET",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\n\t\"type\":\"execute-service\",\n\t\"data\":{\n\t\t\"serviceId\":  \"{{serviceId}}\",\n\t\t\"dataInputs\": {},\n\t\t\"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }]\n\t}\n}"
		},
		{
			"id": "cf46202d-f0c0-b971-30d1-8afffd58e14e",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_geo}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475785877345,
			"name": "3.3 Get GeoJSON data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "d3ff8dc3-12af-3800-6232-9bc98c631e1a",
			"headers": "",
			"url": "https://piazza.{{domain}}/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\npostman.setEnvironmentVariable('max_retries', 10);\npostman.setEnvironmentVariable('retry_loop',0);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1476286601895,
			"name": "2.3 Gateway Health Check",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "d5bd1afe-f5a0-2bd1-d721-027231fd2a64",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType?name=piazza:ingest",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data', 'array')) {\n    tests[\"There is only one\"] = data.data.length === 1;\n    if (testLevels(tests, data.data[0], 'mapping.dataId', 'skip', 'data[0].')) {\n        tests[\"Correct 'dataId' Type\"] = data.data[0].mapping.dataId === 'string';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.dataType', 'skip', 'data[0].')) {\n        tests[\"Correct 'dataType' Type\"] = data.data[0].mapping.dataType === 'string';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.epsg', 'skip', 'data[0].')) {\n        console.log(\" ~~~ Skipping data type check on 'epsg' ~~~ \");\n        // tests[\"Correct 'epsg' Type\"] = data.data[0].mapping.epsg === 'short';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.minX', 'skip', 'data[0].')) {\n        console.log(\" ~~~ Skipping data type check on 'minX' ~~~ \");\n        // tests[\"Correct 'minX' Type\"] = data.data[0].mapping.minX === 'long';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.minY', 'skip', 'data[0].')) {\n        console.log(\" ~~~ Skipping data type check on 'minY' ~~~ \");\n        // tests[\"Correct 'minY' Type\"] = data.data[0].mapping.minY === 'long';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.maxX', 'skip', 'data[0].')) {\n        console.log(\" ~~~ Skipping data type check on 'maxX' ~~~ \");\n        // tests[\"Correct 'maxX' Type\"] = data.data[0].mapping.maxX === 'long';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.maxY', 'skip', 'data[0].')) {\n        console.log(\" ~~~ Skipping data type check on 'maxY' ~~~ \");\n        // tests[\"Correct 'maxY' Type\"] = data.data[0].mapping.maxY === 'long';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.hosted', 'skip', 'data[0].')) {\n        tests[\"Correct 'hosted' Type\"] = data.data[0].mapping.hosted === 'boolean';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475784481360,
			"name": "6.1.1 System EventTypes - piazza:ingest",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "d96256f9-e618-41a0-dc5b-ffa419c4516e",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/deployment",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770329910,
			"name": "3.1.2 WMS Deployment",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\n    \"dataId\": \"{{dataId_local}}\",\n    \"type\": \"access\",\n    \"deploymentType\": \"geoserver\"\n}\n"
		},
		{
			"id": "def0e477-0009-826a-4f4c-96fa4cb1d116",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId_cropped}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar dummy = {}; // dummy testing variable to get info if it exists.\n\nif (testLevels(dummy, data, 'data.dataType.location.fileSize')) {\n    postman.setEnvironmentVariable(\"fileSize\",data.data.dataType.location.fileSize);\n}\nelse {\n    postman.setEnvironmentVariable(\"fileSize\", 0);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475776405457,
			"name": "7.4 Retrieve Image Data",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "e20c6623-3a37-b817-9ecf-12b523e48982",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType?name=piazza:executionComplete",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data', 'array')) {\n    tests[\"There is only one\"] = data.data.length === 1;\n    if (testLevels(tests, data.data[0], 'mapping.dataId', 'skip', 'data[0].')) {\n        tests[\"Correct 'dataId' Type\"] = data.data[0].mapping.dataId === 'string';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.status', 'skip', 'data[0].')) {\n        tests[\"Correct 'status' Type\"] = data.data[0].mapping.status === 'string';\n    }\n    if (testLevels(tests, data.data[0], 'mapping.jobId', 'skip', 'data[0].')) {\n        tests[\"Correct 'jobId' Type\"] = data.data[0].mapping.jobId === 'string';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475767034353,
			"name": "6.1.1 System EventTypes - piazza:executionComplete",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "e4a810dc-7e08-7e97-f97b-11b399214b45",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/file",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "data",
					"value": "{ \"type\": \"ingest\", \"host\": \"true\", \"data\" : { \"dataType\": { \"type\": \"raster\" }, \"metadata\": { \"name\": \"terrametrics.tif\", \"description\": \"The hungry hungry hippo.\" } } }",
					"type": "text",
					"enabled": true
				},
				{
					"key": "file",
					"value": "terrametrics.tif",
					"type": "file",
					"enabled": true
				}
			],
			"dataMode": "params",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475694094567,
			"name": "4.1 Setup: hippo",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "ea108573-73f7-bf01-8296-a9c15341ecd1",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/trigger",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\n\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.triggerId')) {\n    postman.setEnvironmentVariable('triggerId', data.data.triggerId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475767352918,
			"name": "6.2 Create Trigger",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": [],
			"rawModeData": "{\r\n    \"name\": \"High Severity\",\r\n    \"eventTypeId\": \"{{eventTypeId}}\",\r\n    \"condition\": {\r\n        \"query\": { \"query\": { \"match_all\": {} } }\r\n    },\r\n    \"job\": {\r\n        \"userName\": \"test\",\r\n        \"jobType\": {\r\n            \"type\": \"execute-service\",\r\n            \"data\": {\r\n                \"serviceId\": \"{{serviceId}}\",\r\n                \"dataInputs\": {},\r\n                \"dataOutput\": [\r\n                    {\r\n                        \"mimeType\": \"application/json\",\r\n                        \"type\": \"text\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"enabled\": true\r\n}"
		},
		{
			"id": "f2b865f8-80c9-e00e-06e6-43bac0815d51",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data?keyword=dog",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_dog = false;\nvar found_fox = false;\nvar found_hippo = false;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'dataId', 'skip', 'data[].')) {\n            if (data.data[i].dataId === postman.getEnvironmentVariable('dataId_dog')) {\n                found_dog = true;\n            }\n            if (data.data[i].dataId === postman.getEnvironmentVariable('dataId_fox')) {\n                found_fox = true;\n            }\n            if (data.data[i].dataId === postman.getEnvironmentVariable('dataId_hippo')) {\n                found_hippo = true;\n            }\n        }\n    }\n}\n\ntests[\"Data with 'dog' found. (Correct Search Term)\"] = found_dog;\ntests[\"Data with 'fox' not found. (Wrong Search Term)\"] = !found_fox;\ntests[\"Data with 'hippo' not found. (Wrong Search Term)\"] = !found_hippo;\n",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475692816625,
			"name": "4.2 Filtered GET: dog",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "f457f428-2e42-91f4-e42f-84848d5e8232",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/file",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "data",
					"value": "{ \"type\": \"ingest\", \"host\": \"true\", \"data\" : { \"dataType\": { \"type\": \"raster\" }, \"metadata\": { \"name\": \"terrametrics.tif\", \"description\": \"The quick, brown fox.\" } } }",
					"type": "text",
					"enabled": true
				},
				{
					"key": "file",
					"value": "terrametrics.tif",
					"type": "file",
					"enabled": true
				}
			],
			"dataMode": "params",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.jobId')) {\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475694084459,
			"name": "4.1 Setup: fox",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		},
		{
			"id": "feabfe52-897d-802d-7d0e-18bd8766b72b",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType/{{eventTypeId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1475770997278,
			"name": "Delete EventType",
			"description": "",
			"collectionId": "779a67b2-12e0-c6d6-c7e3-d73036ff3aed",
			"responses": []
		}
	]
}