{
	"id": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
	"name": "Job_Functions",
	"description": "",
	"order": [
		"df334ca4-d0b7-ce44-21ef-381089d0e05c",
		"1d4a8b48-4ffe-70be-f439-6c55acd68006",
		"cb455f02-2c18-8c8c-06ae-588dbca74ac5",
		"10fe4789-db77-e8d5-2596-ec6325e13694",
		"1a321284-c3a0-5f6d-1092-405542bafa54",
		"f3f5927d-138c-5a5a-51b8-c714cfe40794",
		"034915c6-4a05-fa37-a6ed-af8355d56be7",
		"0d39dab8-5658-1449-7ab2-9d4d374dbd96",
		"7d7e8475-4be6-30d7-792e-fabedb62f4bf",
		"22ea8e8e-5b7f-e274-9b5b-367ec451da44",
		"d4e3c996-5af5-edb2-12e3-6a16ae7c5c0e",
		"3caad2c1-10be-52d3-b5bc-576c1a8e5a4a",
		"2a2879c1-2aa2-fbc3-7f96-09d69b439b42"
	],
	"folders": [],
	"timestamp": 1467292846156,
	"owner": "699425",
	"remoteLink": "",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "034915c6-4a05-fa37-a6ed-af8355d56be7",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('status')) {\n    tests[\"status field present in output\"] = true;\n    tests[\"Job is cancelled\"] = data.status === 'Cancelled';\n}\nelse {\n    tests[\"status field present in output\"] = false;\n}\nif (data.hasOwnProperty('jobType')) {\n    tests[\"jobType field present in output\"] = true;\n    tests[\"Correct jobType\"] = data.jobType === 'execute-service';\n}\nelse {\n    tests[\"jobType field present in output\"] = false;\n}\nif (data.hasOwnProperty('jobId')) {\n    tests[\"jobId field present in output\"] = true;\n    tests[\"Correct jobId used\"] = data.jobId === postman.getEnvironmentVariable('jobId');\n}\nelse {\n    tests[\"jobId field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467298187238,
			"name": "Check Job Status - Cancelled",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": []
		},
		{
			"id": "0d39dab8-5658-1449-7ab2-9d4d374dbd96",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"data": [
				{
					"key": "softDelete",
					"value": "false",
					"type": "text",
					"enabled": true
				},
				{
					"key": "",
					"value": "",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "params",
			"name": "Unregister Service",
			"description": "",
			"descriptionFormat": "html",
			"time": 1467298123552,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present.\"] = true;\n    tests[\"Correct returned type\"] = data.type === 'service-id';\n}\nelse {\n    tests[\"type field present.\"] = false;\n}\nif (data.hasOwnProperty('serviceId')) {\n    tests[\"serviceId field present\"] = true;\n    tests[\"correct serviceId returned\"] = postman.getEnvironmentVariable('serviceId') === data.serviceId;\n}\nelse{\n    tests[\"serviceId field present\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			}
		},
		{
			"id": "10fe4789-db77-e8d5-2596-ec6325e13694",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('status')) {\n    tests[\"status field present in output\"] = true;\n    tests[\"Job is running\"] = data.status === 'Running';\n}\nelse {\n    tests[\"status field present in output\"] = false;\n}\nif (data.hasOwnProperty('jobType')) {\n    tests[\"jobType field present in output\"] = true;\n    tests[\"Correct jobType\"] = data.jobType === 'execute-service';\n}\nelse {\n    tests[\"jobType field present in output\"] = false;\n}\nif (data.hasOwnProperty('jobId')) {\n    tests[\"jobId field present in output\"] = true;\n    tests[\"Correct jobId used\"] = data.jobId === postman.getEnvironmentVariable('jobId');\n}\nelse {\n    tests[\"jobId field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467297902708,
			"name": "Check Job Status - Running",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": []
		},
		{
			"id": "1a321284-c3a0-5f6d-1092-405542bafa54",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Not ready\"] = false;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467297893648,
			"name": "Rerun Job",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": []
		},
		{
			"id": "1d4a8b48-4ffe-70be-f439-6c55acd68006",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present.\"] = true;\n    tests[\"Correct returned type\"] = data.type === 'service-id';\n}\nelse {\n    tests[\"type field present.\"] = false;\n}\nif (data.hasOwnProperty('serviceId') && (typeof data.serviceId === 'string' || data.serviceId instanceof String)) {\n    tests[\"serviceId Present\"] = true;\n    tests[\"GUID created for serviceId\"] = data.serviceId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"serviceId\",'\"' + data.serviceId + '\"');\n}\nelse{\n    tests[\"serviceId field present\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467312623495,
			"name": "Register Service",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": [],
			"rawModeData": "{\n  \"url\": \"http://pzsvc-hello.int.geointservices.io/\",\n  \"contractUrl\": \"http://helloContract\",\n   \"method\" : \"GET\",\n  \"serviceId\": \"\",\n  \"resourceMetadata\": {\n      \"name\": \"pzsvc-hello service\",\n      \"description\": \"~!~ xXx Ultra-specific example just for this test xXx ~!~\"\n  }\n}"
		},
		{
			"id": "22ea8e8e-5b7f-e274-9b5b-367ec451da44",
			"headers": "Content-Type: application/json\nAuthorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/v2/job",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"data": [],
			"dataMode": "raw",
			"name": "Create Job w/ Unregistered Service",
			"description": "",
			"descriptionFormat": "html",
			"time": 1467311577102,
			"version": 2,
			"responses": [],
			"tests": "var data = JSON.parse(responseBody);\nfunction pausecomp(millis)\n{\n    var date = new Date();\n    var curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n}\nif (data.hasOwnProperty('jobId') && typeof data.jobId === 'string') {\n    tests[\"jobId string field present in output\"] = true;\n    tests[\"GUID created for jobId\"] = data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"jobId\",data.jobId);\n    pausecomp(0);\n}\nelse {\n    tests[\"jobId string field present in output\"] = false;\n}\npostman.setEnvironmentVariable('serviceId',postman.getEnvironmentVariable('serviceId').replace(/\"/g,'')); // Remove quotes from serviceId for later tests.",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"rawModeData": "{\r\n  \"data\": {\r\n    \"serviceId\": {{serviceId}}\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "2a2879c1-2aa2-fbc3-7f96-09d69b439b42",
			"headers": "Content-Type: application/json\nAuthorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/v2/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nfunction pausecomp(millis)\n{\n    var date = new Date();\n    var curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n}\nif (data.hasOwnProperty('jobId') && typeof data.jobId === 'string') {\n    tests[\"jobId string field present in output\"] = true;\n    tests[\"GUID created for jobId\"] = data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"jobId\",data.jobId);\n    pausecomp(0);\n}\nelse {\n    tests[\"jobId string field present in output\"] = false;\n}\npostman.setEnvironmentVariable('serviceId',postman.getEnvironmentVariable('serviceId').replace(/\"/g,'')); // Remove quotes from serviceId for later tests.",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467311881313,
			"name": "Create Job w/ Fake Service",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n    \"serviceId\": \"\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "3caad2c1-10be-52d3-b5bc-576c1a8e5a4a",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/job/FakeJob",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\ntests[\"Not Ready.  Pending bug fix.\"] = false;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467310292074,
			"name": "Cancel Fake Job",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": []
		},
		{
			"id": "7d7e8475-4be6-30d7-792e-fabedb62f4bf",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 500\"] = responseCode.code === 500;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present.\"] = true;\n    tests[\"Correct returned type\"] = data.type === 'error';\n}\nelse {\n    tests[\"type field present.\"] = false;\n}\nif(data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"message field indicates service could not be found.\"] = data.message.has('Service not found');\n}\nelse {\n    tests[\"String message field present in output\"] = false;\n}\npostman.setEnvironmentVariable('serviceId', '\"' + postman.getEnvironmentVariable('serviceId') + '\"');",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467311720077,
			"name": "Confirm Unregister",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": []
		},
		{
			"id": "cb455f02-2c18-8c8c-06ae-588dbca74ac5",
			"headers": "Content-Type: application/json\nAuthorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/v2/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nfunction pausecomp(millis)\n{\n    var date = new Date();\n    var curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n}\nif (data.hasOwnProperty('jobId') && typeof data.jobId === 'string') {\n    tests[\"jobId string field present in output\"] = true;\n    tests[\"GUID created for jobId\"] = data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"jobId\",data.jobId);\n    pausecomp(0);\n}\nelse {\n    tests[\"jobId string field present in output\"] = false;\n}\npostman.setEnvironmentVariable('serviceId',postman.getEnvironmentVariable('serviceId').replace(/\"/g,'')); // Remove quotes from serviceId for later tests.",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467312617605,
			"name": "Create Job",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutputs\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": {{serviceId}}\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "d4e3c996-5af5-edb2-12e3-6a16ae7c5c0e",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/job/FakeJob",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\ntests[\"Mot ready.  Pending Bug Fix\"] = false;\nif (data.hasOwnProperty('jobId')) {\n    tests[\"jobId field present in output\"] = true;\n    tests[\"Correct jobId used\"] = data.jobId === 'FakeJob';\n}\nelse {\n    tests[\"jobId field present in output\"] = false;\n}\nif (data.hasOwnProperty('message')) {\n    tests[\"message field present in output\"] = true;\n    tests[\"'Job Not Found' message\"] = data.message === 'Job Not Found.';\n}\nelse {\n    tests[\"message field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467310000025,
			"name": "Check Job Status - Fake Job",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": []
		},
		{
			"id": "df334ca4-d0b7-ce44-21ef-381089d0e05c",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Says Hello!\"] = responseBody.has('Hello');\npostman.setEnvironmentVariable('serviceId','');\npostman.setEnvironmentVariable('jobId','');",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467296993685,
			"name": "Hello, pz-gateway!",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": []
		},
		{
			"id": "f3f5927d-138c-5a5a-51b8-c714cfe40794",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nfunction pausecomp(millis)\n{\n    var date = new Date();\n    var curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n}\nif (data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"Deletion Successful\"] = data.type === 'success';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"Correct jobId used\"] = data.message.has(postman.getEnvironmentVariable('jobId'));\n    pausecomp(500);\n}\nelse {\n    tests[\"message string field present in output\"] = false;\n}\n",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "citester",
				"password": "citester",
				"saveToRequest": true
			},
			"time": 1467310079706,
			"name": "Cancel Job",
			"description": "",
			"collectionId": "46c9555e-a327-a6de-3bdc-b6b221db15f5",
			"responses": []
		}
	]
}