{
	"variables": [],
	"info": {
		"name": "pzsvc-exec_testing",
		"_postman_id": "1f4e3249-3ef9-0ede-07d8-78b851784998",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Hello Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body matches string\"] = responseBody.has(\"Hello.\");"
					}
				}
			],
			"request": {
				"url": "https://pzsvc-ossim.{{domain}}/",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Ingest Swir1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"Swir1 jobId\",data.jobId)"
					}
				}
			],
			"request": {
				"url": "https://pz-gateway.{{domain}}/data/file",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic eWFycmluamU6ZHIuVjFyZzFuMWE=",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data",
							"value": "{ \"type\": \"ingest\", \"host\": \"true\", \"data\" : { \"dataType\": { \"type\": \"raster\" }, \"metadata\": { \"name\": \"swir1.TIF\", \"description\": \"A BF TIFF file.\", \"classType\": { \"classification\": \"unclassified\" } } } }",
							"type": "text",
							"enabled": true
						},
						{
							"key": "file",
							"value": "swir1.TIF",
							"type": "file",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Ingest Coastal",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"Coastal jobId\",data.jobId)"
					}
				}
			],
			"request": {
				"url": "https://pz-gateway.{{domain}}/data/file",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic eWFycmluamU6ZHIuVjFyZzFuMWE=",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data",
							"value": "{ \"type\": \"ingest\", \"host\": \"true\", \"data\" : { \"dataType\": { \"type\": \"raster\" }, \"metadata\": { \"name\": \"coastal.TIF\", \"description\": \"A BF TIFF file.\", \"classType\": { \"classification\": \"unclassified\" } } } }",
							"type": "text",
							"enabled": true
						},
						{
							"key": "file",
							"value": "coastal.TIF",
							"type": "file",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Swir1 filename",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"Swir1 filename\",data.result.dataId)"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"username": "citester",
						"password": "citester",
						"saveHelperData": true,
						"showPassword": false
					}
				},
				"url": "https://pz-gateway.{{domain}}/job/{{Swir1 jobId}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Coastal filename",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"Coastal filename\",data.result.dataId)"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"username": "citester",
						"password": "citester",
						"saveHelperData": true,
						"showPassword": false
					}
				},
				"url": "https://pz-gateway.{{domain}}/job/{{Coastal jobId}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Barden Example",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\ntests[\"Errors returned null\"] = data.Errors === null;\ntests[\"Wrote product image to <shoreline.tif>\"] = data.ProgReturn.has('Wrote product image to <shoreline.tif>');\ntests[\"Wrote product image to <shoreline_mask.tif>\"] = data.ProgReturn.has('Wrote product image to <shoreline_mask.tif>');\ntests[\"Wrote vector product to <shoreline.geojson>\"] = data.ProgReturn.has('Wrote vector product to <shoreline.geojson>');\ntests[\"InFiles includes the Swir1 file\"] = data.InFiles[postman.getEnvironmentVariable('Swir1 filename')] === (postman.getEnvironmentVariable('Swir1 filename') + '.TIF');\ntests[\"InFiles includes the Coastal file\"] = data.InFiles[postman.getEnvironmentVariable('Coastal filename')] === (postman.getEnvironmentVariable('Coastal filename') + '.TIF');\ntests[\"GUID created for OutFiles\"] = data.OutFiles['shoreline.geojson'].match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\npostman.setEnvironmentVariable(\"Shoreline JobId\",data.OutFiles['shoreline.geojson']);"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"username": "citester",
						"password": "citester",
						"saveHelperData": true,
						"showPassword": false
					}
				},
				"url": "https://pzsvc-ossim.{{domain}}/execute?",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=",
						"description": ""
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "cmd",
							"value": "shoreline --image {{Swir1 filename}}.TIF,{{Coastal filename}}.TIF --projection geo-scaled --threshold 0.5 --tolerance 0 shoreline.geojson",
							"type": "text",
							"enabled": true
						},
						{
							"key": "inFiles",
							"value": "{{Swir1 filename}},{{Coastal filename}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "outGeoJson",
							"value": "shoreline.geojson",
							"type": "text",
							"enabled": true
						},
						{
							"key": "authKey",
							"value": "Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": [
				{
					"name": "execute shoreline",
					"originalRequest": {
						"url": "https://pzsvc-ossim.int.geointservices.io/execute?",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"name": "Authorization",
								"value": "Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI="
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "cmd",
									"value": "shoreline --image {{Swir1 filename}}.TIF,{{Coastal filename}}.TIF --projection geo-scaled --threshold 0.5 --tolerance 0 shoreline.geojson",
									"type": "text",
									"enabled": true
								},
								{
									"key": "inFiles",
									"value": " {{Swir1 filename}},{{Coastal filename}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "outGeoJson",
									"value": "shoreline.geojson",
									"type": "text",
									"enabled": true
								},
								{
									"key": "authKey",
									"value": "Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=",
									"type": "text",
									"enabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"_postman_previewtype": "html",
					"header": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "1064",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Fri, 17 Jun 2016 18:38:16 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "X-Cf-Requestid",
							"key": "X-Cf-Requestid",
							"value": "d8df3cee-9be3-41b0-5e49-a4063984410e",
							"description": "Custom header"
						}
					],
					"cookie": [],
					"responseTime": 174487,
					"body": "{\"InFiles\":{\" 0d535b7a-56dc-41f7-8797-7c27e55edb4e\":\"0d535b7a-56dc-41f7-8797-7c27e55edb4e.TIF\",\"8db5c995-6c72-4f33-8c9d-d654369a3685\":\"8db5c995-6c72-4f33-8c9d-d654369a3685.TIF\"},\"OutFiles\":{\"shoreline.geojson\":\"2779b415-32e8-4b31-84ad-b24bff808926\"},\"ProgReturn\":\"3%\\r3%\\r6%\\r6%\\r10%\\r10%\\r13%\\r13%\\r16%\\r16%\\r19%\\r19%\\r23%\\r23%\\r26%\\r26%\\r29%\\r29%\\r32%\\r32%\\r35%\\r35%\\r39%\\r39%\\r42%\\r42%\\r45%\\r45%\\r48%\\r48%\\r52%\\r52%\\r55%\\r55%\\r58%\\r58%\\r61%\\r61%\\r65%\\r65%\\r68%\\r68%\\r71%\\r71%\\r74%\\r74%\\r77%\\r77%\\r81%\\r81%\\r84%\\r84%\\r87%\\r87%\\r90%\\r90%\\r94%\\r94%\\r97%\\r97%\\r100%\\r\\n100%\\r\\nWrote product image to \\u003cshoreline.tif\\u003e\\n3%\\r3%\\r6%\\r6%\\r10%\\r10%\\r13%\\r13%\\r16%\\r16%\\r19%\\r19%\\r23%\\r23%\\r26%\\r26%\\r29%\\r29%\\r32%\\r32%\\r35%\\r35%\\r39%\\r39%\\r42%\\r42%\\r45%\\r45%\\r48%\\r48%\\r52%\\r52%\\r55%\\r55%\\r58%\\r58%\\r61%\\r61%\\r65%\\r65%\\r68%\\r68%\\r71%\\r71%\\r74%\\r74%\\r77%\\r77%\\r81%\\r81%\\r84%\\r84%\\r87%\\r87%\\r90%\\r90%\\r94%\\r94%\\r97%\\r97%\\r100%\\r\\n100%\\r\\nWrote product image to \\u003cshoreline_mask.tif\\u003e\\nWrote vector product to \\u003cshoreline.geojson\\u003e\\n\",\"Errors\":null}"
				}
			]
		},
		{
			"name": "Validate Job Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\ntests[\"Shoreline file created.\"] = data.data.dataType.location.fileName.has('shoreline.geojson');\ntests[\"Job was created from the ossim-cli shoreline command\"] = data.data.metadata.metadata.algoCmd.has('ossim-cli shoreline');"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"username": "citester",
						"password": "citester",
						"saveHelperData": true,
						"showPassword": false
					}
				},
				"url": "https://pz-gateway.{{domain}}/data/{{Shoreline JobId}}",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": ""
			},
			"response": []
		}
	]
}