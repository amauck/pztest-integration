{
	"id": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
	"name": "Events",
	"description": "",
	"order": [
		"7d6d312c-d75e-b130-cacf-4c07bf1a461d",
		"01ddea84-ced1-fdba-57e5-b253be3e612a",
		"eb41c7c3-4453-8272-3374-5743f489cf4b",
		"a88aa139-def6-dfeb-492f-0b346505d41d",
		"0e675907-9063-ffd4-b26c-4d9520b27704",
		"0af6953d-22e4-b1e4-1d72-a59472118713",
		"a62977d9-4934-3a5b-f1ad-fe568fbd400c",
		"c59cbc28-938a-b5e7-10e5-7db9376c6225",
		"464f34c7-5d05-df9c-593b-4a8cbecf92d9",
		"81243eae-c90a-df7a-7b2e-0d29c60efd44",
		"33ce7c58-72bb-6139-05f3-ea11850e54e8",
		"d275af5b-64d2-1723-2b1e-8f0cbf294e61",
		"4fcb500b-8048-383f-918b-dfd24bb3398f",
		"8110d52c-ba19-9e17-e74b-5cb37f64d92e",
		"56cbc872-0ed7-23fb-547f-5827456e822f",
		"b5478bc1-7b0b-0cc5-40d3-b03914b2de55",
		"e09eff1c-8ce2-f8e4-337f-cef28374d705",
		"a8e82b0f-b6e5-a52c-f7f9-c96e74cf1656",
		"137070a9-a7f6-513b-8d0d-48e0ca9a1681",
		"26e63c8f-1312-e4df-579d-8bb4b2890209",
		"8bf1f418-8393-254d-a1bf-f75e18aea39e",
		"ba188498-f88c-ef19-7200-0ba6c3bb74d5",
		"7e28d17a-7e4d-9522-ef31-beb93029b746",
		"3fa97ecf-18b4-7191-8609-11c8105eb742",
		"cd980ac1-6954-333a-4218-55b91d574056",
		"33d8ab32-fad2-a760-6a02-e552bd958a04"
	],
	"folders": [],
	"timestamp": 1470081676044,
	"owner": "699425",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "01ddea84-ced1-fdba-57e5-b253be3e612a",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Correct Type\"] = data.type.match(/[Tt]ype/) && data.type.match(/[Ee]vent/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('eventTypeId') && typeof data.data.eventTypeId === 'string') {\n        tests[\"data.eventTypeId string field present in output\"] = true;\n        tests[\"eventTypeId GUID created\"] = data.data.eventTypeId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable('eventTypeId', data.data.eventTypeId);\n    }\n    else {\n        tests[\"data.eventTypeId string field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470318091806,
			"name": "Create EventType",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "0af6953d-22e4-b1e4-1d72-a59472118713",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/event/{{eventId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Correct Type\"] = data.type.match(/[Ee]vent/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('eventId')) {\n        tests[\"data.eventId field present in output\"] = true;\n        tests[\"Correct eventId returned\"] = data.data.eventId === postman.getEnvironmentVariable('eventId');\n    }\n    else {\n        tests[\"data.eventId field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470333340072,
			"name": "Get Event",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "0e675907-9063-ffd4-b26c-4d9520b27704",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Correct Type\"] = data.type.match(/[Ee]vent/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('eventId') && typeof data.data.eventId === 'string') {\n        tests[\"data.eventId string field present in output\"] = true;\n        tests[\"eventId GUID created\"] = data.data.eventId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable('eventId', data.data.eventId);\n    }\n    else {\n        tests[\"data.eventId string field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470334266234,
			"name": "Create Event",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\n    \"data\": {\t\n      \"mapping\": {\n\t\t\"dataId\": \"testId\",\n\t\t\"dataType\": \"raster\",\n\t\t\"epsg\": \"3\",\n\t\t\"minX\": \"1.0\",\n\t\t\"minY\": \"1.0\",\n\t\t\"maxX\": \"10.0\",\n\t\t\"maxY\": \"10.0\",\n\t\t\"hosted\": true\n      }\n  },\n  \"eventTypeId\": \"{{eventTypeId}}\"\n}"
		},
		{
			"id": "137070a9-a7f6-513b-8d0d-48e0ca9a1681",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('errors') && data.errors.length > 0) {\n    tests[\"errors array field present in output and is not empty\"] = true;\n    if (data.errors[0].hasOwnProperty('defaultMessage')) {\n        tests[\"data.errors[0].defaultMessage present in output\"] = true;\n        tests[\"'may not be null' message\"] = data.errors[0].defaultMessage === 'may not be null';\n    }\n    else {\n        tests[\"data.errors[0].defaultMessage present in output\"] = false;\n    }\n    if (data.errors[0].hasOwnProperty('field')) {\n        tests[\"data.errors[0].field present in output\"] = true;\n        tests[\"Correct field specified\"] = data.errors[0].field === 'data';\n    }\n    else {\n        tests[\"data.errors[0].field present in output\"] = false;\n    }   \n}\nelse {\n    tests[\"errors array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470342789640,
			"name": "Create Event - No Data",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\n    \"eventTypeId\": \"{{eventTypeId}}\"\n}"
		},
		{
			"id": "26e63c8f-1312-e4df-579d-8bb4b2890209",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('errors') && data.errors.length > 0) {\n    tests[\"errors array field present in output and is not empty\"] = true;\n    if (data.errors[0].hasOwnProperty('defaultMessage')) {\n        tests[\"data.errors[0].defaultMessage present in output\"] = true;\n        tests[\"'may not be null' message\"] = data.errors[0].defaultMessage === 'may not be null';\n    }\n    else {\n        tests[\"data.errors[0].defaultMessage present in output\"] = false;\n    }\n    if (data.errors[0].hasOwnProperty('field')) {\n        tests[\"data.errors[0].field present in output\"] = true;\n        tests[\"Correct field specified\"] = data.errors[0].field === 'eventTypeId';\n    }\n    else {\n        tests[\"data.errors[0].field present in output\"] = false;\n    }   \n}\nelse {\n    tests[\"errors array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470342475129,
			"name": "Create Event - No EventTypeId",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\n    \"data\": {\t\n      \"mapping\": {\n\t\t\"dataId\": \"testId\",\n\t\t\"dataType\": \"raster\",\n\t\t\"epsg\": \"3\",\n\t\t\"minX\": \"1.0\",\n\t\t\"minY\": \"1.0\",\n\t\t\"maxX\": \"10.0\",\n\t\t\"maxY\": \"10.0\",\n\t\t\"hosted\": true\n      }\n    }\n}"
		},
		{
			"id": "33ce7c58-72bb-6139-05f3-ea11850e54e8",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/trigger?perPage=1000&order=desc&sortBy=createdOn",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar found = false;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data') && Array.isArray(data.data) && data.data.length > 0) {\n    tests[\"data array field present in output and is not empty\"] = true;\n    for (i = 0; i < data.data.length; i++) {\n        if (data.data[i].hasOwnProperty('triggerId')) {\n            tests[\"data[].triggerId field present in output\"] = true;\n            if (data.data[i].triggerId === postman.getEnvironmentVariable('triggerId')) {\n                found = true;\n            }\n        }\n        else {\n            tests[\"data[].triggerId field present in output\"] = false;\n            break;\n        }\n    }\n    tests[\"triggerId found\"] = found;\n}\nelse {\n    tests[\"data array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470339958435,
			"name": "Query Triggers",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": []
		},
		{
			"id": "33d8ab32-fad2-a760-6a02-e552bd958a04",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/eventType",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('errors') && data.errors.length > 0) {\n    tests[\"errors array field present in output and is not empty\"] = true;\n    if (data.errors[0].hasOwnProperty('defaultMessage')) {\n        tests[\"data.errors[0].defaultMessage present in output\"] = true;\n        tests[\"'may not be null' message\"] = data.errors[0].defaultMessage === 'may not be null';\n    }\n    else {\n        tests[\"data.errors[0].defaultMessage present in output\"] = false;\n    }\n    if (data.errors[0].hasOwnProperty('field')) {\n        tests[\"data.errors[0].field present in output\"] = true;\n        tests[\"Correct field specified\"] = data.errors[0].field === 'mapping';\n    }\n    else {\n        tests[\"data.errors[0].field present in output\"] = false;\n    }   \n}\nelse {\n    tests[\"errors array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470335401725,
			"name": "Create EventType - Missing 'mapping'",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\"\r\n}\t"
		},
		{
			"id": "3fa97ecf-18b4-7191-8609-11c8105eb742",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"EventType does not exist message\"] = data.message.match(/[Nn]ot/) && data.message.match(/[Ee]vent\\s?[Tt]ype/);\n}\nelse {\n    tests[\"message string field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470334487719,
			"name": "Create Event - Deleted eventTypeId",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\n    \"data\": {\t\n      \"mapping\": {\n\t\t\"dataId\": \"testId\",\n\t\t\"dataType\": \"raster\",\n\t\t\"epsg\": \"3\",\n\t\t\"minX\": \"1.0\",\n\t\t\"minY\": \"1.0\",\n\t\t\"maxX\": \"10.0\",\n\t\t\"maxY\": \"10.0\",\n\t\t\"hosted\": true\n      }\n  },\n  \"eventTypeId\": \"{{eventTypeId}}\"\n}"
		},
		{
			"id": "464f34c7-5d05-df9c-593b-4a8cbecf92d9",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/trigger",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Correct Type\"] = data.type.match(/[Tt]rigger/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('triggerId') && typeof data.data.triggerId === 'string') {\n        tests[\"data.triggerId string field present in output\"] = true;\n        tests[\"triggerId GUID created\"] = data.data.triggerId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable('triggerId', data.data.triggerId);\n    }\n    else {\n        tests[\"data.triggerId string field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('condition')) {\n        tests[\"data.condition field present in output\"] = true;\n        if (data.data.condition.hasOwnProperty('eventTypeIds') && Array.isArray(data.data.condition.eventTypeIds) && data.data.condition.eventTypeIds.length === 1) {\n            tests[\"data.condition.eventTypeIds field present in output and contains one element\"] = true;\n            tests[\"Correct eventTypeId used\"] = data.data.condition.eventTypeIds[0] === postman.getEnvironmentVariable('eventTypeId');\n        }\n        else {\n            tests[\"data.condition.eventTypeIds field present in output and contains one element\"] = false;\n        }\n    }\n    if (data.data.hasOwnProperty('job')) {\n        tests[\"data.job field present in output\"] = true;\n        if (data.data.job.hasOwnProperty('jobType')) {\n            tests[\"data.job.jobType field present in output\"] = true;\n            if (data.data.job.jobType.hasOwnProperty('data')) {\n                tests[\"data.job.jobType.data field present in output\"] = true;\n                if (data.data.job.jobType.data.hasOwnProperty('serviceId')) {\n                    tests[\"data.job.jobType.data.serviceId field present in output\"] = true;\n                    tests[\"Correct serviceId used\"] = data.data.job.jobType.data.serviceId === postman.getEnvironmentVariable('serviceId');\n                }\n                else {\n                    tests[\"data.job.jobType.data.serviceId field present in output\"] = false;\n                }\n            }\n            else {\n                tests[\"data.job.jobType.data field present in output\"] = false;\n            }\n        }\n        else {\n            tests[\"data.job.jobType field present in output\"] = false;\n        }\n    }\n    else {\n        tests[\"data.job field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470339159250,
			"name": "Create Trigger",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\n    \"name\": \"CI Testing Trigger\",\n    \"enabled\": true,\n    \"condition\": {\n        \"eventTypeIds\": [\"{{eventTypeId}}\"],\n        \"query\": {\n            \"query\": {\n                \"bool\": {\n                    \"must\": [\n                        {\n                            \"match\": {\n                                \"dataType\": \"raster\"\n                            }\n                        }\n                    ]\n                }\n            }\n        }\n    },\n    \"job\": {\n        \"jobType\": {\n            \"type\": \"execute-service\",\n            \"data\": {\n                \"serviceId\": \"{{serviceId}}\"\n            }\n        }\n    }\n}"
		},
		{
			"id": "4fcb500b-8048-383f-918b-dfd24bb3398f",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/trigger/{{triggerId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Deletion successful\"] = data.type.match(/[Ss]uccess/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('message') && typeof data.data.message === 'string') {\n        tests[\"data.message string field present in output\"] = true;\n        tests[\"Correct triggerId deleted\"] = data.data.message.match(postman.getEnvironmentVariable('triggerId'));\n        tests[\"Successful deletion message\"] = data.data.message.match(/[Ss]uccess/) && data.data.message.match(/[Dd]elet/);\n    }\n    else {\n        tests[\"data.message string field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470341763060,
			"name": "Delete Trigger",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "56cbc872-0ed7-23fb-547f-5827456e822f",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/trigger/{{triggerId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"Failure message (Bug #5700)\"] = data.message.match(/[Nn]ot/);\n}\nelse {\n    tests[\"message string field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470342171417,
			"name": "Get Deleted Trigger",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "7d6d312c-d75e-b130-cacf-4c07bf1a461d",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Says Hello!\"] = responseBody.has('Hello');\npostman.setEnvironmentVariable('eventTypeId', '');",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470335403348,
			"name": "Hello, pz-gateway!",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": []
		},
		{
			"id": "7e28d17a-7e4d-9522-ef31-beb93029b746",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType/{{eventTypeId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"Failure message (Bug #5700)\"] = data.message.match(/[Nn]ot/);\n}\nelse {\n    tests[\"message string field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470324671205,
			"name": "Get Deleted EventType",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "8110d52c-ba19-9e17-e74b-5cb37f64d92e",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/trigger/{{triggerId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404 (Bug #5699)\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"Failure message\"] = data.message.match(/[Nn]ot/);\n}\nelse {\n    tests[\"message string field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470342194717,
			"name": "Delete Trigger Again",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "81243eae-c90a-df7a-7b2e-0d29c60efd44",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/trigger/{{triggerId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Correct Type\"] = data.type.match(/[Tt]rigger/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('triggerId') && typeof data.data.triggerId === 'string') {\n        tests[\"data.triggerId string field present in output\"] = true;\n        tests[\"triggerId GUID created\"] = data.data.triggerId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable('triggerId', data.data.triggerId);\n    }\n    else {\n        tests[\"data.triggerId string field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('condition')) {\n        tests[\"data.condition field present in output\"] = true;\n        if (data.data.condition.hasOwnProperty('eventTypeIds') && Array.isArray(data.data.condition.eventTypeIds) && data.data.condition.eventTypeIds.length === 1) {\n            tests[\"data.condition.eventTypeIds field present in output and contains one element\"] = true;\n            tests[\"Correct eventTypeId used\"] = data.data.condition.eventTypeIds[0] === postman.getEnvironmentVariable('eventTypeId');\n        }\n        else {\n            tests[\"data.condition.eventTypeIds field present in output and contains one element\"] = false;\n        }\n    }\n    if (data.data.hasOwnProperty('job')) {\n        tests[\"data.job field present in output\"] = true;\n        if (data.data.job.hasOwnProperty('jobType')) {\n            tests[\"data.job.jobType field present in output\"] = true;\n            if (data.data.job.jobType.hasOwnProperty('data')) {\n                tests[\"data.job.jobType.data field present in output\"] = true;\n                if (data.data.job.jobType.data.hasOwnProperty('serviceId')) {\n                    tests[\"data.job.jobType.data.serviceId field present in output\"] = true;\n                    tests[\"Correct serviceId used\"] = data.data.job.jobType.data.serviceId === postman.getEnvironmentVariable('serviceId');\n                }\n                else {\n                    tests[\"data.job.jobType.data.serviceId field present in output\"] = false;\n                }\n            }\n            else {\n                tests[\"data.job.jobType.data field present in output\"] = false;\n            }\n        }\n        else {\n            tests[\"data.job.jobType field present in output\"] = false;\n        }\n    }\n    else {\n        tests[\"data.job field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470339441039,
			"name": "Get Trigger",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "8bf1f418-8393-254d-a1bf-f75e18aea39e",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/eventType/{{eventTypeId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Deletion successful\"] = data.type.match(/[Ss]uccess/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('message') && typeof data.data.message === 'string') {\n        tests[\"data.message string field present in output\"] = true;\n        tests[\"Correct eventTypeId deleted\"] = data.data.message.match(postman.getEnvironmentVariable('eventTypeId'));\n        tests[\"Successful deletion message\"] = data.data.message.match(/[Ss]uccess/) && data.data.message.match(/[Dd]elet/);\n    }\n    else {\n        tests[\"data.message string field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470335434521,
			"name": "Delete EventType",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "a62977d9-4934-3a5b-f1ad-fe568fbd400c",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/event?perPage=1000&order=desc&sortBy=createdOn",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar found = false;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data') && Array.isArray(data.data) && data.data.length > 0) {\n    tests[\"data array field present in output and is not empty\"] = true;\n    for (i = 0; i < data.data.length; i++) {\n        if (data.data[i].hasOwnProperty('eventId')) {\n            tests[\"data[].eventId field present in output\"] = true;\n            if (data.data[i].eventId === postman.getEnvironmentVariable('eventId')) {\n                found = true;\n            }\n        }\n        else {\n            tests[\"data[].eventId field present in output\"] = false;\n            break;\n        }\n    }\n    tests[\"eventId found\"] = found;\n}\nelse {\n    tests[\"data array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470333554645,
			"name": "Query Events",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": []
		},
		{
			"id": "a88aa139-def6-dfeb-492f-0b346505d41d",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType?perPage=1000",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar found = false;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data') && Array.isArray(data.data) && data.data.length > 0) {\n    tests[\"data array field present in output and is not empty\"] = true;\n    for (i = 0; i < data.data.length; i++) {\n        if (data.data[i].hasOwnProperty('eventTypeId')) {\n            tests[\"data[].eventTypeId field present in output\"] = true;\n            if (data.data[i].eventTypeId === postman.getEnvironmentVariable('eventTypeId')) {\n                found = true;\n            }\n        }\n        else {\n            tests[\"data[].eventTypeId field present in output\"] = false;\n            break;\n        }\n    }\n    tests[\"eventTypeId found\"] = found;\n}\nelse {\n    tests[\"data array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470321849445,
			"name": "Query EventTypes",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": []
		},
		{
			"id": "a8e82b0f-b6e5-a52c-f7f9-c96e74cf1656",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/event/garbage",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"Failure message (Bug #5700)\"] = data.message.match(/[Nn]ot/);\n}\nelse {\n    tests[\"message string field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470335433785,
			"name": "Get Deleted Event",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "b5478bc1-7b0b-0cc5-40d3-b03914b2de55",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/event/{{eventId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Deletion successful\"] = data.type.match(/[Ss]uccess/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('message') && typeof data.data.message === 'string') {\n        tests[\"data.message string field present in output\"] = true;\n        tests[\"Correct eventId deleted\"] = data.data.message.match(postman.getEnvironmentVariable('eventId'));\n        tests[\"Successful deletion message\"] = data.data.message.match(/[Ss]uccess/) && data.data.message.match(/[Dd]elet/);\n    }\n    else {\n        tests[\"data.message string field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470335361066,
			"name": "Delete Event",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "ba188498-f88c-ef19-7200-0ba6c3bb74d5",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType/{{eventTypeId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404 (Bug #5699)\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"Failure message\"] = data.message.match(/[Nn]ot/);\n}\nelse {\n    tests[\"message string field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470324266164,
			"name": "Delete EventType Again",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "c59cbc28-938a-b5e7-10e5-7db9376c6225",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200 or 201\"] = responseCode.code === 200 || responseCode.code === 201;  // Fix once stage returns 201 on POSTs.\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present.\"] = true;\n    tests[\"Correct returned type\"] = data.type === 'service-id';\n}\nelse {\n    tests[\"type field present.\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output.\"] = true;\n    if (data.data.hasOwnProperty('serviceId') && typeof data.data.serviceId === 'string') {\n        tests[\"data.serviceId string field present in output.\"] = true;\n        tests[\"GUID created for serviceId\"] = data.data.serviceId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable(\"serviceId\",data.data.serviceId);\n    }\n    else{\n        tests[\"data.serviceId string field present in output.\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output.\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470338919968,
			"name": "Register Service",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\n    \"url\": \"http://pzsvc-hello.int.geointservices.io/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"method\" : \"GET\",\n    \"serviceId\": \"\",\n    \"resourceMetadata\": {\n        \"classType\": \"hello\",\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"~!~ xXx Ultra-specific example just for this test xXx ~!~\"\n    }\n}"
		},
		{
			"id": "cd980ac1-6954-333a-4218-55b91d574056",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('errors') && data.errors.length > 0) {\n    tests[\"errors array field present in output and is not empty\"] = true;\n    if (data.errors[0].hasOwnProperty('defaultMessage')) {\n        tests[\"data.errors[0].defaultMessage present in output\"] = true;\n        tests[\"'may not be null' message\"] = data.errors[0].defaultMessage === 'may not be null';\n    }\n    else {\n        tests[\"data.errors[0].defaultMessage present in output\"] = false;\n    }\n    if (data.errors[0].hasOwnProperty('field')) {\n        tests[\"data.errors[0].field present in output\"] = true;\n        tests[\"Correct field specified\"] = data.errors[0].field === 'name';\n    }\n    else {\n        tests[\"data.errors[0].field present in output\"] = false;\n    }   \n}\nelse {\n    tests[\"errors array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470326468262,
			"name": "Create EventType - Missing 'name'",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "d275af5b-64d2-1723-2b1e-8f0cbf294e61",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/trigger/{{triggerId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Correct Type\"] = data.type.match(/[Tt]rigger/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('triggerId') && typeof data.data.triggerId === 'string') {\n        tests[\"data.triggerId string field present in output\"] = true;\n        tests[\"triggerId GUID created\"] = data.data.triggerId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable('triggerId', data.data.triggerId);\n    }\n    else {\n        tests[\"data.triggerId string field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('condition')) {\n        tests[\"data.condition field present in output\"] = true;\n        if (data.data.condition.hasOwnProperty('eventTypeIds') && Array.isArray(data.data.condition.eventTypeIds) && data.data.condition.eventTypeIds.length === 1) {\n            tests[\"data.condition.eventTypeIds field present in output and contains one element\"] = true;\n            tests[\"Correct eventTypeId used\"] = data.data.condition.eventTypeIds[0] === postman.getEnvironmentVariable('eventTypeId');\n        }\n        else {\n            tests[\"data.condition.eventTypeIds field present in output and contains one element\"] = false;\n        }\n    }\n    if (data.data.hasOwnProperty('job')) {\n        tests[\"data.job field present in output\"] = true;\n        if (data.data.job.hasOwnProperty('jobType')) {\n            tests[\"data.job.jobType field present in output\"] = true;\n            if (data.data.job.jobType.hasOwnProperty('data')) {\n                tests[\"data.job.jobType.data field present in output\"] = true;\n                if (data.data.job.jobType.data.hasOwnProperty('serviceId')) {\n                    tests[\"data.job.jobType.data.serviceId field present in output\"] = true;\n                    tests[\"Correct serviceId used\"] = data.data.job.jobType.data.serviceId === postman.getEnvironmentVariable('serviceId');\n                }\n                else {\n                    tests[\"data.job.jobType.data.serviceId field present in output\"] = false;\n                }\n            }\n            else {\n                tests[\"data.job.jobType.data field present in output\"] = false;\n            }\n        }\n        else {\n            tests[\"data.job.jobType field present in output\"] = false;\n        }\n    }\n    else {\n        tests[\"data.job field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470341627510,
			"name": "Disable Trigger",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\n    \"enabled\": false\n}"
		},
		{
			"id": "e09eff1c-8ce2-f8e4-337f-cef28374d705",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/event/garbage",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404 (Bug #5699)\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"Failure message\"] = data.message.match(/[Nn]ot/);\n}\nelse {\n    tests[\"message string field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470335432960,
			"name": "Delete Event Again",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "eb41c7c3-4453-8272-3374-5743f489cf4b",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/eventType/{{eventTypeId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type') && typeof data.type === 'string') {\n    tests[\"type string field present in output\"] = true;\n    tests[\"Correct Type\"] = data.type.match(/[Tt]ype/) && data.type.match(/[Ee]vent/);\n}\nelse {\n    tests[\"type string field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('eventTypeId')) {\n        tests[\"data.eventTypeId field present in output\"] = true;\n        tests[\"Correct eventTypeId returned\"] = data.data.eventTypeId === postman.getEnvironmentVariable('eventTypeId');\n    }\n    else {\n        tests[\"data.eventTypeId field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470320952652,
			"name": "Get EventType",
			"description": "",
			"collectionId": "3f6d0eb7-d459-c1f7-4b6f-acfcf9f02aeb",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		}
	]
}