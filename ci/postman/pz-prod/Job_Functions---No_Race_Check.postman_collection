{
	"id": "5dfe3aea-543a-2593-29ab-958316da3107",
	"name": "Job_Functions---No_Race_Check",
	"description": "",
	"order": [
		"2a569581-1870-abf6-a029-d3b91878bab3",
		"7fb2ce42-64a5-4874-8914-9953e65370f3",
		"cea1269c-b341-6128-e66a-76fc10451a8d",
		"463b783e-a8a9-ad6f-3be3-f0bcb9a83ce4",
		"15f6885e-ca3b-2cc1-1c31-403ac6589f39",
		"ee0460e3-a789-9d6c-577d-23032f698cdd",
		"76d7381e-38e8-cd3a-3b5b-0da4b5de788c",
		"8f1616c0-6042-c15c-156d-e3cebd40b16a",
		"b740e547-fa27-5a44-f2e9-98955a206a24",
		"0192c196-5298-b686-b0b7-ede6d37b8921",
		"807bf4f8-e8ca-ffe4-57ee-7feb654b3fba",
		"aed83c2a-5edb-1a46-eab2-b9c99e5dc7f8",
		"b4b5eed6-8eac-b627-1906-c938c5230fc3",
		"f2461654-793e-a076-13ab-eb00618f05f9",
		"92231100-23b8-7f2f-7d8c-40e4c509792c",
		"7b3a4c1d-2346-ed18-ed23-e8dbf403476a",
		"76ecea23-b01f-50eb-cbe1-5af8d5cdcedc",
		"f20ddc55-e53b-d3d0-50ea-c168ea9b7b7c",
		"4d8e19bf-5e87-56f7-eab8-21a7130d5bfc"
	],
	"folders": [],
	"timestamp": 1472483247701,
	"owner": "699425",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "0192c196-5298-b686-b0b7-ede6d37b8921",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('dataId')) {\n        tests[\"data.dataId field present in output\"] = true;\n        tests[\"Same dataId returned\"] = data.data.dataId === postman.getEnvironmentVariable('dataId');\n    }\n    else {\n        tests[\"data.dataId field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('dataType')) {\n        tests[\"data.dataType field present in output\"] = true;\n        if (data.data.dataType.hasOwnProperty('content') && typeof data.data.dataType.content === 'string') {\n            tests[\"data.dataType.content field present in output\"] = true;\n            tests[\"The first and second runs of this job match\"] = data.data.dataType.content === postman.getEnvironmentVariable('First run content');\n        }\n        else {\n            tests[\"data.dataType.content field present in output\"] = false;\n        }\n    }\n    else {\n        tests[\"data.dataType field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469805663631,
			"name": "Read Repeat Data Output",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"responses": []
		},
		{
			"id": "15f6885e-ca3b-2cc1-1c31-403ac6589f39",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('dataId')) {\n        tests[\"data.dataId field present in output\"] = true;\n        tests[\"Same dataId returned\"] = data.data.dataId === postman.getEnvironmentVariable('dataId');\n    }\n    else {\n        tests[\"data.dataId field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('dataType')) {\n        tests[\"data.dataType field present in output\"] = true;\n        if (data.data.dataType.hasOwnProperty('content') && typeof data.data.dataType.content === 'string') {\n            tests[\"data.dataType.content field present in output\"] = true;\n            tests[\"The returned text says hello.\"] = data.data.dataType.content.match(/[Hh](ello|i)/);\n            postman.setEnvironmentVariable('First run content', data.data.dataType.content);\n        }\n        else {\n            tests[\"data.dataType.content field present in output\"] = false;\n        }\n    }\n    else {\n        tests[\"data.dataType field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471031057663,
			"name": "Read Data Output",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"responses": []
		},
		{
			"id": "2a569581-1870-abf6-a029-d3b91878bab3",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Says Hello!\"] = responseBody.has('Hello');\npostman.setEnvironmentVariable('retry_loop',0);\npostman.setEnvironmentVariable('max_retries', 5);\npostman.setEnvironmentVariable('retry', false); // For \"Validate Job Stays Cancelled\"\npostman.setEnvironmentVariable('serviceId','');\npostman.setEnvironmentVariable('jobId','');\npostman.setEnvironmentVariable('dataId','');\npostman.setEnvironmentVariable('First run content', 'Not Null#$&%^');",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1469809774854,
			"name": "Hello, pz-gateway!",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107"
		},
		{
			"id": "463b783e-a8a9-ad6f-3be3-f0bcb9a83ce4",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "function pausecomp(millis)\n{\n    var date = new Date();\n    var curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n}\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('status')) {\n        tests[\"data.status field present in output\"] = true;\n        if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n            if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n                postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n                postman.setNextRequest('Check Job Status');\n                pausecomp(1000);\n            }\n            else {\n                tests[\"Job finished in time\"] = false;\n            }\n        }\n        else if(data.data.status === 'Success') {\n            postman.setEnvironmentVariable('retry_loop',0);\n            tests[\"Job finished in time\"] = true;\n            if (data.data.hasOwnProperty('result')) {\n                tests[\"data.result field present in output\"] = true;\n                if (data.data.result.hasOwnProperty('dataId') && typeof data.data.result.dataId === 'string') {\n                    tests[\"data.result.dataId string field present in output\"] = true;\n                    tests[\"GUID created for dataId\"] = data.data.result.dataId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n                    postman.setEnvironmentVariable(\"dataId\", data.data.result.dataId);\n                }\n                else {\n                    tests[\"data.result.dataId string field present in output\"] = false;\n                }\n            }\n            else {\n                tests[\"data.result field present in output\"] = false;\n            }\n        }\n        else {\n            tests[\"status should not be \" + data.data.status] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else {\n        tests[\"data.status field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('jobType') && typeof data.data.jobType === 'string') {\n        tests[\"data.jobType string field present in output\"] = true;\n        tests[\"Correct jobType\"] = data.data.jobType.match(/[eE]xecute.*[sS]ervice/);\n    }\n    else {\n        tests[\"data.jobType string field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('jobId')) {\n        tests[\"data.jobId field present in output\"] = true;\n        tests[\"Correct jobId used\"] = data.data.jobId === postman.getEnvironmentVariable('jobId');\n    }\n    else {\n        tests[\"data.jobId field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}\n",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470940060134,
			"name": "Check Job Status",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107"
		},
		{
			"id": "4d8e19bf-5e87-56f7-eab8-21a7130d5bfc",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "function pausecomp(millis)\n{\n    var date = new Date();\n    var curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n}\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('status')) {\n        if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n            if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n                postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n                postman.setNextRequest('Validate Failed Status');\n                pausecomp(1000);\n            }\n            else {\n                tests[\"Job finished in time\"] = false;\n            }\n        }\n        else if (data.data.status === 'Error') {\n            tests[\"Job had error\"] = true;\n            if(data.data.hasOwnProperty('result')) {\n                tests[\"data.result field present\"] = true;\n                if(data.data.result.hasOwnProperty('message') && typeof data.data.result.message === 'string') {\n                    tests[\"data.result.message string field present\"] = true;\n                }\n                else {\n                    tests[\"data.result.message string field present\"] = false;\n                }\n            }\n            else {\n                tests[\"data.result field present\"] = false;\n            }\n        }\n        else {\n            tests[\"status should not be \" + data.data.status + \".\"] = false;\n            tests[\"Output: \" + responseBody] = false;\n            postman.setNextRequest('');\n        }\n    }\n    else {\n        tests[\"status field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1472483559184,
			"name": "Validate Failed Status",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"responses": []
		},
		{
			"id": "76d7381e-38e8-cd3a-3b5b-0da4b5de788c",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"Deletion Successful\"] = data.type === 'success';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('message') && typeof data.data.message === 'string') {\n        tests[\"data.message string field present in output\"] = true;\n        tests[\"'no longer running' message\"] = data.data.message.match(/[Nn]o.*[Rr]unning/);\n    }\n    else {\n        tests[\"data.message string field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471031059750,
			"name": "Cannot Cancel Completed Job",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107"
		},
		{
			"id": "76ecea23-b01f-50eb-cbe1-5af8d5cdcedc",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/service?perPage=10&keyword=bf-handle",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"data": null,
			"dataMode": "params",
			"name": "Find bf-handle serviceId",
			"description": "",
			"descriptionFormat": "html",
			"time": 1470928203666,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data') && Array.isArray(data.data) && data.data.length > 0) {\n    tests[\"data array field present in output and is not empty\"] = true;\n    if (data.data[0].hasOwnProperty('serviceId')) {\n        tests[\"data[0].serviceId field present in output\"] = true;\n        postman.setEnvironmentVariable('bf-handle serviceId',data.data[0].serviceId);\n    }\n    else {\n        tests[\"data[0].serviceId field present in output\"] = true;\n    }\n}\nelse{\n    tests[\"data array field present in output and is not empty\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			}
		},
		{
			"id": "7b3a4c1d-2346-ed18-ed23-e8dbf403476a",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/job/FakeJob",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"There was an error\"] = data.type === 'error';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469199585099,
			"name": "Cancel Fake Job",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107"
		},
		{
			"id": "7fb2ce42-64a5-4874-8914-9953e65370f3",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present.\"] = true;\n    tests[\"Correct returned type\"] = data.type === 'service-id';\n}\nelse {\n    tests[\"type field present.\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output.\"] = true;\n    if (data.data.hasOwnProperty('serviceId') && typeof data.data.serviceId === 'string') {\n        tests[\"data.serviceId string field present in output.\"] = true;\n        tests[\"GUID created for serviceId\"] = data.data.serviceId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable(\"serviceId\",data.data.serviceId);\n    }\n    else{\n        tests[\"data.serviceId string field present in output.\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output.\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471441358506,
			"name": "Register Service",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"rawModeData": "{\n    \"url\": \"http://pzsvc-hello.int.geointservices.io/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"method\" : \"GET\",\n    \"serviceId\": \"\",\n    \"resourceMetadata\": {\n        \"classType\": \"hello\",\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"~!~ xXx Ultra-specific example just for this test xXx ~!~\"\n    }\n}"
		},
		{
			"id": "807bf4f8-e8ca-ffe4-57ee-7feb654b3fba",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"data": null,
			"dataMode": "params",
			"name": "Delete Data Created By Job",
			"description": "",
			"descriptionFormat": "html",
			"time": 1469806150955,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"Deletion Successful\"] = data.type === 'success';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('message') && typeof data.data.message === 'string') {\n        tests[\"data.message string field present in output\"] = true;\n        tests[\"Correct dataId used\"] = data.data.message.has(postman.getEnvironmentVariable('dataId'));\n    }\n    else {\n        tests[\"data.message string field present in output\"] = false;\n    }\n}\n// if (data.hasOwnProperty('message') && typeof data.message === 'string') {\n//     tests[\"message field present in output\"] = true;\n//     tests[\"Correct dataId used\"] = data.message.has(postman.getEnvironmentVariable('dataId'));\n// }\n// else {\n//     tests[\"message field present in output\"] = false;\n// }",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			}
		},
		{
			"id": "8f1616c0-6042-c15c-156d-e3cebd40b16a",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output.\"] = true;\n    if (data.data.hasOwnProperty('jobId') && typeof data.data.jobId === 'string') {\n        tests[\"data.jobId string field present in output.\"] = true;\n        tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        tests[\"A New jobId was created.\"] = data.data.jobId != postman.getEnvironmentVariable('jobId');\n        postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n    }\n    else{\n        tests[\"data.jobId string field present in output.\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output.\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471441374443,
			"name": "Rerun Job",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107"
		},
		{
			"id": "92231100-23b8-7f2f-7d8c-40e4c509792c",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/job/FakeJob",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"There was an error\"] = data.type === 'error';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469199578894,
			"name": "Check Job Status - Fake Job",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107"
		},
		{
			"id": "aed83c2a-5edb-1a46-eab2-b9c99e5dc7f8",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output.\"] = true;\n    if (data.data.hasOwnProperty('jobId') && typeof data.data.jobId === 'string') {\n        tests[\"data.jobId string field present in output.\"] = true;\n        tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n    }\n    else{\n        tests[\"data.jobId string field present in output.\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output.\"] = false;\n}\npostman.setEnvironmentVariable('retry', true);",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471448489807,
			"name": "Create Job Again",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "b4b5eed6-8eac-b627-1906-c938c5230fc3",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [
				{
					"key": "",
					"value": "",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present.\"] = true;\n    tests[\"Correct returned type\"] = data.type === 'success';\n}\nelse {\n    tests[\"type field present.\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('message') && typeof data.data.message === 'string') {\n        tests[\"data.message string field present in output\"] = true;\n    }\n    else {\n        tests[\"data.message string field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471440493208,
			"name": "Unregister Service",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107"
		},
		{
			"id": "b740e547-fa27-5a44-f2e9-98955a206a24",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "function pausecomp(millis)\n{\n    var date = new Date();\n    var curDate = null;\n    do { curDate = new Date(); }\n    while(curDate-date < millis);\n}\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('status')) {\n        tests[\"data.status field present in output\"] = true;\n        if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n            if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n                postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n                postman.setNextRequest('Check Repeat Job Status');\n                pausecomp(1000);\n            }\n            else {\n                tests[\"Job finished in time\"] = false;\n            }\n        }\n        else if(data.data.status === 'Success') {\n            postman.setEnvironmentVariable('retry_loop',0);\n            tests[\"Job finished in time\"] = true;\n            if (data.data.hasOwnProperty('result')) {\n                tests[\"data.result field present in output\"] = true;\n                if (data.data.result.hasOwnProperty('dataId') && typeof data.data.result.dataId === 'string') {\n                    tests[\"data.result.dataId string field present in output\"] = true;\n                    tests[\"GUID created for dataId\"] = data.data.result.dataId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n                    tests[\"A new dataId was created.\"] = data.data.result.dataId != postman.getEnvironmentVariable('dataId');\n                    postman.setEnvironmentVariable(\"dataId\", data.data.result.dataId);\n                }\n                else {\n                    tests[\"data.result.dataId string field present in output\"] = false;\n                }\n            }\n            else {\n                tests[\"data.result field present in output\"] = false;\n            }\n        }\n        else {\n            tests[\"status should not be \" + data.data.status] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else {\n        tests[\"data.status field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('jobType') && typeof data.data.jobType === 'string') {\n        tests[\"data.jobType string field present in output\"] = true;\n        tests[\"Correct jobType\"] = data.data.jobType.match(/[eE]xecute.*[sS]ervice/);\n    }\n    else {\n        tests[\"data.jobType string field present in output\"] = false;\n    }\n    if (data.data.hasOwnProperty('jobId')) {\n        tests[\"data.jobId field present in output\"] = true;\n        tests[\"Correct jobId used\"] = data.data.jobId === postman.getEnvironmentVariable('jobId');\n    }\n    else {\n        tests[\"data.jobId field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}\n",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1469809684770,
			"name": "Check Repeat Job Status",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"responses": []
		},
		{
			"id": "cea1269c-b341-6128-e66a-76fc10451a8d",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output.\"] = true;\n    if (data.data.hasOwnProperty('jobId') && typeof data.data.jobId === 'string') {\n        tests[\"data.jobId string field present in output.\"] = true;\n        tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n        postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n    }\n    else{\n        tests[\"data.jobId string field present in output.\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output.\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471441365476,
			"name": "Create Job",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "ee0460e3-a789-9d6c-577d-23032f698cdd",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('type')) {\n    tests[\"type field present in output\"] = true;\n    tests[\"Deletion Successful\"] = data.type === 'success';\n}\nelse {\n    tests[\"type field present in output\"] = false;\n}\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('message') && typeof data.data.message === 'string') {\n        tests[\"data.message string field present in output\"] = true;\n        tests[\"Correct dataId used\"] = data.data.message.has(postman.getEnvironmentVariable('dataId'));\n    }\n    else {\n        tests[\"data.message string field present in output\"] = false;\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471441007054,
			"name": "Delete Data Created By Job",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"responses": []
		},
		{
			"id": "f20ddc55-e53b-d3d0-50ea-c168ea9b7b7c",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (data.hasOwnProperty('data')) {\n    tests[\"data field present in output\"] = true;\n    if (data.data.hasOwnProperty('jobId')) {\n        tests[\"data.jobId field present in output\"] = true;\n        postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n    }\n    else {\n        tests[\"data.jobId field present in output\"] = false;\n    }\n}\nelse {\n    tests[\"data field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1470925155493,
			"name": "Request Garbage bf-handle Job",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n    \"dataInputs\": {\r\n      \"body\": {\r\n        \"content\": \"{\\\"Garbage\\\": \\\"Garbage\\\"}\",\r\n        \"type\": \"body\",\r\n        \"mimeType\": \"application/json\"\r\n      }\r\n    },\r\n    \"dataOutput\": [\r\n      {\r\n        \"mimeType\": \"application/json\",\r\n        \"type\": \"text\"\r\n      }\r\n    ],\r\n    \"serviceId\": \"{{bf-handle serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "f2461654-793e-a076-13ab-eb00618f05f9",
			"headers": "Authorization: Basic MTMzOTU5OTQtMzg1OC00MzE1LThiYzEtMjkyN2RmZTRkNDgzOg==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\nvar data = JSON.parse(responseBody);\nif(data.hasOwnProperty('type')) {\n    tests[\"type field present.\"] = true;\n    tests[\"Correct returned type\"] = data.type === 'error';\n}\nelse {\n    tests[\"type field present.\"] = false;\n}\nif(data.hasOwnProperty('message') && typeof data.message === 'string') {\n    tests[\"message string field present in output\"] = true;\n    tests[\"message field indicates service could not be found.\"] = data.message.has('Service not found');\n}\nelse {\n    tests[\"String message field present in output\"] = false;\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1471440711486,
			"name": "Confirm Unregister",
			"description": "",
			"collectionId": "5dfe3aea-543a-2593-29ab-958316da3107"
		}
	]
}