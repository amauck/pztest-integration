{
	"id": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
	"name": "Services_and_Jobs",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "d56edcab-e1a2-8302-8254-b12766417afb",
			"name": "1_Startup",
			"description": "",
			"order": [
				"9333601e-593c-9bb4-bcdf-b437349d4e7b",
				"2c75fd00-6eb4-a0f4-40be-9e0ea11fbf90"
			],
			"owner": "699425"
		},
		{
			"id": "51708a3c-5f51-c0aa-0a3d-33d73a6ab454",
			"name": "2_Critical",
			"description": "",
			"order": [
				"34f5cb55-bacd-726f-4e4a-2bb838938858",
				"667dabcf-9904-981d-c876-1e63376a1864",
				"2b80f10b-c742-bef1-63e6-80462429c7ab",
				"60c9b232-9f3c-20b2-fab9-5446b11066b8",
				"62399f36-bfb1-553a-72c4-b74c896ca162",
				"c773461b-5e85-3686-4761-8d5af5897bd2"
			],
			"owner": "699425",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c"
		},
		{
			"id": "bdc131bd-0cb7-965b-ab53-5bd33449c247",
			"name": "3_Normal",
			"description": "",
			"order": [
				"d8bebf66-1119-749f-4087-0a9b28f7e079",
				"27295b58-09e3-078b-b52c-f9a968a3d303",
				"677d2925-a9e1-5fe2-6dea-1c3b1e8b220e",
				"8ce8a578-51f8-6dd3-d1ce-07cc96d4df0f",
				"fcab329f-ad50-0286-7287-0fcad98b71cd",
				"9f40825b-5d25-6bd8-f467-f3ce5b87ad43",
				"64f2abe3-e926-f721-7ddf-458f8a0d63be",
				"34b2eb58-200c-4952-171a-aeb761dee126"
			],
			"owner": "699425",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c"
		},
		{
			"id": "77205174-4d78-0434-2e54-a9eae4174623",
			"name": "4_Low",
			"description": "",
			"order": [
				"f6eda7c9-4f59-09f3-7805-b69f1e411e67",
				"09c49f48-1823-ddc6-7746-b86f15c94fcd",
				"e834f0f8-c36c-3201-fd12-d32a53c2d148",
				"f1ca1948-fba2-fc47-37fb-b502e75dd78b",
				"734b2868-631b-2288-71d0-0d22da21070f",
				"c84a5cf0-b44c-7aea-d56c-a4a98e54b7dd",
				"fd9d2b67-b2f9-93e2-9652-d0e31be7e659",
				"35a40a05-7aa6-d57e-7c27-f0030f31e694",
				"a7b2cd63-f52b-4698-72e3-7e2422e8f41b",
				"89ba72d6-fd54-abff-3cf4-fd9fac236c10",
				"4796d941-771c-0830-b9ef-72b383c043ab",
				"a7e5d5e6-9b8d-fd38-4b13-9041550c828c",
				"ed21ad5d-7a94-0fca-e9a7-8407eadadb2c",
				"b1d531da-e9a7-7995-ada5-10eb4ebc87f3",
				"1517c775-2ced-ebae-e013-a5e82dd75963",
				"f3ed3487-0058-2e5c-07d4-abf6b3a7923c",
				"4c73979f-b9c2-102b-f47b-93c6fc332101",
				"b69ec83b-69a7-eb5e-699e-65e6a052c6db",
				"43341dce-2dda-c411-70c6-eb0ff2bfa81c",
				"781201eb-8d3a-d7cb-fe6d-2d8cd53bdbfd",
				"f06dd39a-63e5-1f0c-6e81-1cf2f4a48e4c",
				"94549de0-800f-d5ca-41fa-88fd747a79b1",
				"25aef320-0512-6068-45c6-7ca8fbb3bc4e",
				"da10afab-5091-1615-62f0-7c430908d2fd",
				"7c0a2afb-01f8-f75b-abd4-a166b847c615",
				"4bc180ba-b526-34e3-c94f-4754d1b4aaa2",
				"98ff3c22-87a4-f892-71da-7102d7cefe60",
				"052a62bc-7a69-d8a7-abbb-a7b71e32c5bb",
				"217d4034-c24a-4697-5380-d8cefdc4cc38",
				"edd57179-6da4-ce97-f66e-6cd52eb43fa0",
				"129f49e0-8a94-37df-12c1-526be6b240fa",
				"4ef428ec-c58a-185a-7eab-04720f9b9794",
				"5edc1b6c-441a-730b-4f32-3d8080600929",
				"66cf4779-9668-3597-3678-376ccd8ce2a8",
				"f5b67f48-2dcb-b8f9-3c4f-9b87e911c3da",
				"cf0fe603-796d-bd1f-fa68-dcc3207c43a6",
				"6d7646ca-b685-82e0-55ec-d18b3d80a1ff",
				"a5a38e73-5d76-e1c4-8f1c-4dceebd25cce",
				"c7dc476b-12bd-faf7-7b24-3f8e4dd433d0",
				"35e7253d-803e-224b-08bd-21103e70e93c",
				"184b2627-da7f-6bb4-75ca-74759bf2d355",
				"0055d086-a9dc-759c-34b8-c37c1fdc8001",
				"7e698f3b-a1bb-7550-037d-ad2983fd62b8",
				"4d9dac29-bdb0-31b9-b4a1-b80f44b2b531"
			],
			"owner": "699425",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c"
		},
		{
			"id": "f7908e06-7328-8027-9d6d-a04c8bfe0055",
			"name": "5_Teardown",
			"description": "",
			"order": [
				"5def9700-4e0c-c03e-f168-c364e88e5563",
				"76226aca-af9d-f43e-5262-f04aad3e4d87"
			]
		}
	],
	"timestamp": 1476208592988,
	"owner": "699425",
	"public": false,
	"requests": [
		{
			"id": "0055d086-a9dc-759c-34b8-c37c1fdc8001",
			"headers": "Content-Type: application/json\nAuthorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 400 (Bug #7542)\"] = responseCode.code === 400;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Missing type\"] = data.message.match(/type/i);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477324209413,
			"name": "Create Job - No dataOutput.type",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "052a62bc-7a69-d8a7-abbb-a7b71e32c5bb",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?perPage=foo",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 400\"] = responseCode.code === 400;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Cannot have a string\"] = data.message.match(/string/i);\n    tests[\"Should be integer\"] = data.message.match(/integer/i);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477312543064,
			"name": "List Services - Bad perPage",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "09c49f48-1823-ddc6-7746-b86f15c94fcd",
			"headers": "Authorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/foo",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Not Found Message\"] = data.message.match(/no.*found/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type (Bug #9332)\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477327085895,
			"name": "Job Not Found - DELETE",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "129f49e0-8a94-37df-12c1-526be6b240fa",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.serviceId', 'string')) {\n    postman.setEnvironmentVariable(\"serviceId_badmethod\",data.data.serviceId);\n    tests[\"serviceId GUID created\"] = data.data.serviceId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477313970807,
			"name": "Bad  Method - Register Service",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"url\": \"https://pzsvc-hello.{{domain}}/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"method\" : 1,\n    \"isAsynchronous\" : \"false\",\n    \"resourceMetadata\": {\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"{{text description}}\",\n        \"classType\": {\n            \"classification\": \"UNCLASSIFIED\"\n         }\n    }\n}"
		},
		{
			"id": "1517c775-2ced-ebae-e013-a5e82dd75963",
			"headers": "Content-Type: application/json\nsize: 30\nfrom: 0\nkey: stamp\norder: true\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.serviceId', 'string')) {\n    postman.setEnvironmentVariable(\"serviceId_cancel\",data.data.serviceId);\n    tests[\"serviceId GUID created\"] = data.data.serviceId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476980710542,
			"name": "Cancelling Job - Register Service",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"url\": \"https://pzsvc-hello.{{domain}}/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"method\" : \"GET\",\n    \"isAsynchronous\" : \"false\",\n    \"resourceMetadata\": {\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"{{text description}}\",\n        \"classType\": {\n            \"classification\": \"UNCLASSIFIED\"\n         }\n    }\n}"
		},
		{
			"id": "184b2627-da7f-6bb4-75ca-74759bf2d355",
			"headers": "Content-Type: application/json\nAuthorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Failed Validation message\"] = data.message.match(/[Vv]alidation/);\n}\n\nif (testLevels(tests, data, 'errors', 'array')) {\n    if (testLevels(tests, data.errors[0], 'code', 'string')) {\n        tests[\"Not Null Message\"] = data.errors[0].code.match(/[Nn]ull/);\n    }\n    if (testLevels(tests, data.errors[0], 'field')) {\n        tests[\"The problem is with 'data.dataOutput'\"] = data.errors[0].field === 'data.dataOutput';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477323297087,
			"name": "Create Job - No dataOutput",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "217d4034-c24a-4697-5380-d8cefdc4cc38",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?sortBy=foo",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 400 (Bug #7542)\"] = responseCode.code === 400;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Problem with sortBy parameter\"] = data.message.match(/sortBy/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477312131747,
			"name": "List Services - Bad sortBy",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "25aef320-0512-6068-45c6-7ca8fbb3bc4e",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.jobId', 'string')) {\n    tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476987134071,
			"name": "Deleted Service - Create Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId_cancel}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "27295b58-09e3-078b-b52c-f9a968a3d303",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service/query",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200 (Bug #9336)\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_service = false;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'serviceId', 'skip', 'data[]')) {\n            found_service = (found_service || data.data[i].serviceId === postman.getEnvironmentVariable('serviceId'));\n        }\n    }\n}\n\ntests[\"Service found in list\"] = found_service;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477321553987,
			"name": "Complex Query",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"query\": {\n        \"match\": {\n            \"_all\": true\n        }\n    }\n}"
		},
		{
			"id": "2b80f10b-c742-bef1-63e6-80462429c7ab",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.dataType.content', 'string')) {\n    tests[\"Hello Service was executed\"] = data.data.dataType.content.match(/h(ello|i)/i);\n    postman.setEnvironmentVariable('Repeat Job Check', data.data.dataType.content);\n}\nif (testLevels(tests, data, 'data.metadata.createdBy')) {\n    tests[\"Created by 'citester' (Bug #8978)\"] = data.data.metadata.createdBy === 'citester';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476966610486,
			"name": "Check Resulting dataId",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "2c75fd00-6eb4-a0f4-40be-9e0ea11fbf90",
			"headers": "Content-Type: application/json\nsize: 30\nfrom: 0\nkey: stamp\norder: true\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.serviceId', 'string')) {\n    postman.setEnvironmentVariable(\"serviceId\",data.data.serviceId);\n    tests[\"serviceId GUID created\"] = data.data.serviceId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476294348152,
			"name": "Register Service",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"url\": \"https://pzsvc-hello.{{domain}}/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"method\" : \"GET\",\n    \"isAsynchronous\" : \"false\",\n    \"resourceMetadata\": {\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"{{text description}}\",\n        \"classType\": {\n            \"classification\": \"UNCLASSIFIED\"\n         }\n    }\n}"
		},
		{
			"id": "34b2eb58-200c-4952-171a-aeb761dee126",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Service offline message\"] = data.message.match(/service/i) && data.message.match(/offline/i);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476967278009,
			"name": "Disable - Create Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "bdc131bd-0cb7-965b-ab53-5bd33449c247",
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "34f5cb55-bacd-726f-4e4a-2bb838938858",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": "console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\nconsole.log(\"< < < < < < < < < < < CRITICAL > > > > > > > > > >\");\nconsole.log(\"    These tests represent basic functionality.    \");\nconsole.log(\"         DO NOT PUSH if these tests fail.         \");\nconsole.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.jobId', 'string')) {\n    tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477327421356,
			"name": "Create Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "35a40a05-7aa6-d57e-7c27-f0030f31e694",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?perPage=200&sortBy=resourceMetadata.createdOn&order=desc&page=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_service = false;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'serviceId', 'skip', 'data[]')) {\n            found_service = (found_service || data.data[i].serviceId === postman.getEnvironmentVariable('serviceId_cancel'));\n        }\n    }\n    if (testLevels(tests, data, 'pagination.count')) {\n        tests[\"Displays second page\"] = Math.min(200, Math.max(data.pagination.count - 200, 0)) == data.data.length;\n    }\n}\nif (testLevels(tests, data, 'pagination.page')) {\n    tests[\"Displays second page\"] = data.pagination.page == 1;\n}\nif (testLevels(tests, data, 'pagination.perPage')) {\n    tests[\"Correct perPage\"] = data.pagination.perPage == 200;\n}\nif (testLevels(tests, data, 'pagination.sortBy')) {\n    tests[\"Correct sortBy\"] = data.pagination.sortBy == 'resourceMetadata.createdOn';\n}\nif (testLevels(tests, data, 'pagination.order')) {\n    tests[\"Correct order\"] = data.pagination.order == 'desc';\n}\n\ntests[\"Service not found in list\"] = !found_service;",
			"currentHelper": "basicAuth",
			"helperAttributes": "{\"id\":\"basic\",\"username\":\"{{API Key}}\",\"password\":\"\",\"saveToRequest\":true}",
			"time": 1477311449485,
			"name": "List Services Pagination",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"timestamp": null,
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "35e7253d-803e-224b-08bd-21103e70e93c",
			"headers": "Content-Type: application/json\nAuthorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Failed Validation message\"] = data.message.match(/[Vv]alidation/);\n}\n\nif (testLevels(tests, data, 'errors', 'array')) {\n    if (testLevels(tests, data.errors[0], 'code', 'string')) {\n        tests[\"Not Null Message\"] = data.errors[0].code.match(/[Nn]ull/);\n    }\n    if (testLevels(tests, data.errors[0], 'field')) {\n        tests[\"The problem is with 'data.dataInputs'\"] = data.errors[0].field === 'data.dataInputs';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477323237046,
			"name": "Create Job - No dataInputs",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "43341dce-2dda-c411-70c6-eb0ff2bfa81c",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId_cancel}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nif (testLevels(tests, data, 'type', 'string')) {\n    tests[\"Deletion successful\"] = data.type.match(/[Ss]uccess/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476984388515,
			"name": "Deleted Service - Delete",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "4796d941-771c-0830-b9ef-72b383c043ab",
			"headers": "Content-Type: application/json\nsize: 30\nfrom: 0\nkey: stamp\norder: true\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'type', 'string')) {\n    tests[\"Success!\"] = data.type.match(/[Ss]uccess/);\n}\nif (testLevels(tests, data, 'data.message', 'string')) {\n    tests[\"Successful Update Message\"] = data.data.message.match(/[Uu]pdat/) && data.data.message.match(/[Ss]ervice/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477320918650,
			"name": "Reenable - Update Service",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"rawModeData": "{\n    \"resourceMetadata\": {\n        \"availability\": \"anything\"\n    }\n}"
		},
		{
			"id": "4bc180ba-b526-34e3-c94f-4754d1b4aaa2",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?page=-1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 400\"] = responseCode.code === 400;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Problem with page parameter\"] = data.message.match(/page/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477311653127,
			"name": "List Services - Negative Page",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "4c73979f-b9c2-102b-f47b-93c6fc332101",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nif (testLevels(tests, data, 'type')) {\n    tests[\"Cancellation Successful\"] = data.type === 'success';\n}\nif (testLevels(tests, data, 'data.message', 'string')) {\n    tests[\"Correct jobId deleted\"] = data.data.message.match(postman.getEnvironmentVariable('jobId'));\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476981675849,
			"name": "Cancelling Job - Cancel Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "4d9dac29-bdb0-31b9-b4a1-b80f44b2b531",
			"headers": "Content-Type: application/json\nAuthorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 400 (Bug #7542)\"] = responseCode.code === 400;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Missing type\"] = data.message.match(/type/i);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": "{\"id\":\"basic\",\"username\":\"{{API Key}}\",\"password\":\"\",\"saveToRequest\":true}",
			"time": 1477325120157,
			"name": "Create Job - No type",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"timestamp": null,
			"rawModeData": "{\r\n\t\"data\": {\r\n\t\t\"dataInputs\": {},\r\n\t\t\"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n\t\t\"serviceId\": \"{{serviceId}}\"\r\n\t}\r\n}"
		},
		{
			"id": "4ef428ec-c58a-185a-7eab-04720f9b9794",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.jobId', 'string')) {\n    tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477314736711,
			"name": "Bad Method - Create Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId_badmethod}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "5def9700-4e0c-c03e-f168-c364e88e5563",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": "console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\nconsole.log(\" < < < < < < < < < < < < TEAR-DOWN > > > > > > > > > > > \");\nconsole.log(\"These tests destroy any items created by previous tests. \");\nconsole.log(\" These tests represent important features, like DELETEs. \");\nconsole.log(\"            DO NOT PUSH if these tests fail.             \");\nconsole.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nif (testLevels(tests, data, 'type', 'string')) {\n    tests[\"Deletion successful\"] = data.type.match(/[Ss]uccess/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477327460576,
			"name": "Delete Service",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "5edc1b6c-441a-730b-4f32-3d8080600929",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Bad Method - Job Status');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Error') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.message', 'string')) {\n            tests[\"I don't know what this message should be\"] = false;\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status + \" (Bug #9480)\"] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}\nif (testLevels(tests, data, 'data.createdBy')) {\n    tests[\"Created by 'citester'\"] = data.data.createdBy === 'citester';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477314762006,
			"name": "Bad Method - Job Status",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "60c9b232-9f3c-20b2-fab9-5446b11066b8",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476297549665,
			"name": "Get Service Info",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "62399f36-bfb1-553a-72c4-b74c896ca162",
			"headers": "Content-Type: application/json\nsize: 30\nfrom: 0\nkey: stamp\norder: true\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'type', 'string')) {\n    tests[\"Success!\"] = data.type.match(/[Ss]uccess/);\n}\nif (testLevels(tests, data, 'data.message', 'string')) {\n    tests[\"Successful Update Message\"] = data.data.message.match(/[Uu]pdat/) && data.data.message.match(/[Ss]ervice/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476298091922,
			"name": "Update Service",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"resourceMetadata\": {\n        \"name\": \"{{New Name}}\"\n    }\n}"
		},
		{
			"id": "64f2abe3-e926-f721-7ddf-458f8a0d63be",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.resourceMetadata.availability')) {\n    tests[\"Service is now OFFLINE\"] = data.data.resourceMetadata.availability === 'OFFLINE';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477083835759,
			"name": "Disable - Validate Soft Delete",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "667dabcf-9904-981d-c876-1e63376a1864",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Check Job Status');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}\nif (testLevels(tests, data, 'data.createdBy')) {\n    tests[\"Created by 'citester'\"] = data.data.createdBy === 'citester';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476296970400,
			"name": "Check Job Status",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "66cf4779-9668-3597-3678-376ccd8ce2a8",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId_badmethod}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nif (testLevels(tests, data, 'type', 'string')) {\n    tests[\"Deletion successful\"] = data.type.match(/[Ss]uccess/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477326112625,
			"name": "Bad Method - Delete Service",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "677d2925-a9e1-5fe2-6dea-1c3b1e8b220e",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.jobId', 'string')) {\n    tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    tests[\"New GUID created\"] = data.data.jobId != postman.getEnvironmentVariable('jobId');\n    postman.setEnvironmentVariable(\"jobId_rerun\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476966199099,
			"name": "Rerun - Create Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "bdc131bd-0cb7-965b-ab53-5bd33449c247",
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "6d7646ca-b685-82e0-55ec-d18b3d80a1ff",
			"headers": "Authorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Failed Validation message\"] = data.message.match(/[Vv]alidation/);\n}\n\nif (testLevels(tests, data, 'errors', 'array')) {\n    if (testLevels(tests, data.errors[0], 'code', 'string')) {\n        tests[\"Not Null Message\"] = data.errors[0].code.match(/[Nn]ull/);\n    }\n    if (testLevels(tests, data.errors[0], 'field')) {\n        tests[\"The problem is with 'method'\"] = data.errors[0].field === 'method';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477325818426,
			"name": "Register Service - No method",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"url\": \"https://pzsvc-hello.{{domain}}/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"isAsynchronous\" : \"false\",\n    \"resourceMetadata\": {\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"{{text description}}\",\n        \"classType\": {\n            \"classification\": \"UNCLASSIFIED\"\n         }\n    }\n}"
		},
		{
			"id": "734b2868-631b-2288-71d0-0d22da21070f",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?perPage=200&sortBy=resourceMetadata.createdOn&order=desc&keyword=integration",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_service = false;\nvar found_keyword = true;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'serviceId', 'skip', 'data[]')) {\n            found_service = (found_service || data.data[i].serviceId === postman.getEnvironmentVariable('serviceId'));\n        }\n        found_keyword = found_keyword && JSON.stringify(data.data[i]).match(/integration/i);\n    }\n}\n\ntests[\"Service found in list\"] = found_service;\ntests[\"All services had specified keyword\"] = found_keyword;",
			"currentHelper": "basicAuth",
			"helperAttributes": "{\"id\":\"basic\",\"username\":\"{{API Key}}\",\"password\":\"\",\"saveToRequest\":true}",
			"time": 1477082472923,
			"name": "List Services with keyword",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"timestamp": null,
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "76226aca-af9d-f43e-5262-f04aad3e4d87",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nif (testLevels(tests, data, 'type', 'string')) {\n    tests[\"Deletion successful\"] = data.type.match(/[Ss]uccess/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476965335179,
			"name": "Delete Data",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "781201eb-8d3a-d7cb-fe6d-2d8cd53bdbfd",
			"headers": "Authorization: Basic YjdkMTUzZWMtMjQ4MC00ZGEzLTg0ZjctMDE0NWNmNTlhMjk4Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId_cancel}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Not found message\"] = data.message.match(/no.*found/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477076601378,
			"name": "Deleted Service - Delete Again",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "7c0a2afb-01f8-f75b-abd4-a166b847c615",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?perPage=200&sortBy=resourceMetadata.createdOn&order=desc",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_service = false;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'serviceId', 'skip', 'data[]')) {\n            found_service = (found_service || data.data[i].serviceId === postman.getEnvironmentVariable('serviceId_cancel'));\n        }\n    }\n}\n\ntests[\"Service not found in list\"] = !found_service;",
			"currentHelper": "basicAuth",
			"helperAttributes": "{\"id\":\"basic\",\"username\":\"{{API Key}}\",\"password\":\"\",\"saveToRequest\":true}",
			"time": 1476993492152,
			"name": "Deleted Service - List Services",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"timestamp": null,
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "7e698f3b-a1bb-7550-037d-ad2983fd62b8",
			"headers": "Content-Type: application/json\nAuthorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Failed Validation message\"] = data.message.match(/[Vv]alidation/);\n}\n\nif (testLevels(tests, data, 'errors', 'array')) {\n    if (testLevels(tests, data.errors[0], 'code', 'string')) {\n        tests[\"Not Null Message\"] = data.errors[0].code.match(/[Nn]ull/);\n    }\n    if (testLevels(tests, data.errors[0], 'field')) {\n        tests[\"The problem is with 'data.serviceId'\"] = data.errors[0].field === 'data.serviceId';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477324530533,
			"name": "Create Job - No serviceId",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }]\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "89ba72d6-fd54-abff-3cf4-fd9fac236c10",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId_disable}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Rerun/Disable - Status');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Error') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.message', 'string')) {\n            tests[\"Message states service is offline\"] = data.data.result.message.match(/service/i) && data.data.result.message.match(/offline/i);\n            tests[\"serviceId included in message\"] = data.data.result.message.match(postman.getEnvironmentVariable('serviceId'));\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}\nif (testLevels(tests, data, 'data.createdBy')) {\n    tests[\"Created by 'citester'\"] = data.data.createdBy === 'citester';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476967936350,
			"name": "Rerun/Disable - Status",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623"
		},
		{
			"id": "8ce8a578-51f8-6dd3-d1ce-07cc96d4df0f",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId_rerun}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Rerun - Status');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId_rerun\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}\nif (testLevels(tests, data, 'data.createdBy')) {\n    tests[\"Created by 'citester'\"] = data.data.createdBy === 'citester';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476966364525,
			"name": "Rerun - Status",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "bdc131bd-0cb7-965b-ab53-5bd33449c247"
		},
		{
			"id": "9333601e-593c-9bb4-bcdf-b437349d4e7b",
			"headers": "Authorization: Basic Y2l0ZXN0ZXI6Y2l0ZXN0ZXI=\n",
			"url": "https://pz-gateway.{{domain}}/",
			"preRequestScript": "console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\nconsole.log(\"< < < < < < < < < < < < < START-UP > > > > > > > > > > > \");\nconsole.log(\"   These tests create required environment variables.    \");\nconsole.log(\"    Any failures here will cause other tests to fail.    \");\nconsole.log(\"            DO NOT PUSH if these tests fail.             \");\nconsole.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");",
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Says Hello!\"] = responseBody.has('Hello');\npostman.setEnvironmentVariable('retry_loop',0);\npostman.setEnvironmentVariable('max_retries', 9);\npostman.setEnvironmentVariable('serviceId','');\npostman.setEnvironmentVariable('jobId','');\npostman.setEnvironmentVariable('dataId','');\npostman.setEnvironmentVariable('New Name', 'This is a N3W N@M3!');\npostman.setEnvironmentVariable('text description', 'Service created for integration testing.');",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1477327409635,
			"name": "Hello, pz-gateway!",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "94549de0-800f-d5ca-41fa-88fd747a79b1",
			"headers": "Content-Type: application/json\nsize: 30\nfrom: 0\nkey: stamp\norder: true\nAuthorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/foo",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 404 (Bug # 9485)\"] = responseCode.code === 404;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Not found message\"] = data.message.match(/no.*found/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477318726378,
			"name": "Deleted Service - Update",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"resourceMetadata\": {\n        \"name\": \"bar\"\n    }\n}"
		},
		{
			"id": "98ff3c22-87a4-f892-71da-7102d7cefe60",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?page=foo",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 400\"] = responseCode.code === 400;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Cannot have a string\"] = data.message.match(/string/i);\n    tests[\"Should be integer\"] = data.message.match(/integer/i);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477311835792,
			"name": "List Services - Bad Page",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "9f40825b-5d25-6bd8-f467-f3ce5b87ad43",
			"headers": "Authorization: Basic YmQ4NGYwNGMtZGVmMC00NjQ1LWJiZmItNTJmMGQ2M2NlZjRlOg==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}?softDelete=true",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nif (testLevels(tests, data, 'type', 'string')) {\n    tests[\"Deletion successful\"] = data.type.match(/[Ss]uccess/);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476967074473,
			"name": "Disable - Soft Delete Service",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "bdc131bd-0cb7-965b-ab53-5bd33449c247"
		},
		{
			"id": "a5a38e73-5d76-e1c4-8f1c-4dceebd25cce",
			"headers": "Authorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Failed Validation message\"] = data.message.match(/[Vv]alidation/);\n}\n\nif (testLevels(tests, data, 'errors', 'array')) {\n    if (testLevels(tests, data.errors[0], 'code', 'string')) {\n        tests[\"Not Null Message\"] = data.errors[0].code.match(/[Nn]ull/);\n    }\n    if (testLevels(tests, data.errors[0], 'field')) {\n        tests[\"The problem is with 'contractUrl'\"] = data.errors[0].field === 'contractUrl';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477325807559,
			"name": "Register Service - No contractUrl",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"url\": \"https://pzsvc-hello.{{domain}}/\",\n    \"method\": \"GET\",\n    \"isAsynchronous\" : \"false\",\n    \"resourceMetadata\": {\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"{{text description}}\",\n        \"classType\": {\n            \"classification\": \"UNCLASSIFIED\"\n         }\n    }\n}"
		},
		{
			"id": "a7b2cd63-f52b-4698-72e3-7e2422e8f41b",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.jobId', 'string')) {\n    tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    tests[\"New GUID created\"] = data.data.jobId != postman.getEnvironmentVariable('jobId');\n    postman.setEnvironmentVariable(\"jobId_disable\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476967431228,
			"name": "Rerun/Disable - Create Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "a7e5d5e6-9b8d-fd38-4b13-9041550c828c",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"data": [],
			"dataMode": "raw",
			"name": "Reenable - Create Job",
			"description": "",
			"descriptionFormat": "html",
			"time": 1477321064404,
			"version": 2,
			"responses": [],
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.jobId', 'string')) {\n    tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "b1d531da-e9a7-7995-ada5-10eb4ebc87f3",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"data": null,
			"dataMode": "params",
			"name": "Get Service Info Details",
			"description": "",
			"descriptionFormat": "html",
			"time": 1476297420337,
			"version": 2,
			"responses": [],
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nif (testLevels(tests, data, 'data.resourceMetadata.description')) {\n    tests[\"Description is correct\"] = data.data.resourceMetadata.description === postman.getEnvironmentVariable('text description');\n}\nif (testLevels(tests, data, 'data.resourceMetadata.createdBy')) {\n    tests[\"Created by 'citester'\"] = data.data.resourceMetadata.createdBy === 'citester';\n}\nif (testLevels(tests, data, 'data.resourceMetadata.createdOn')) {\n    tests[\"CreatedOn Field Exists\"] = data.data.resourceMetadata.createdOn !== null && data.data.resourceMetadata.createdOn !== '';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"folder": "77205174-4d78-0434-2e54-a9eae4174623"
		},
		{
			"id": "b69ec83b-69a7-eb5e-699e-65e6a052c6db",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar wait = eval(postman.getEnvironmentVariable('wait'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Cancelling' || data.data.status === 'Cancelled') {\n        if (postman.getEnvironmentVariable('recheck') === 'true') {\n            tests[\"The job stayed cancelled\"] = true;\n        }\n        else {\n            postman.setNextRequest('Cancelling Job - Validating');\n            postman.setEnvironmentVariable('recheck', 'true');\n            wait(20000);\n        }\n    }\n    else {\n        tests[\"Status should not be \" + data.data.status] = false;\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476982453386,
			"name": "Cancelling Job - Validating",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "c773461b-5e85-3686-4761-8d5af5897bd2",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.resourceMetadata.name')) {\n    tests[\"'Name' Field Updated\"] = data.data.resourceMetadata.name === postman.getEnvironmentVariable('New Name');\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476301198074,
			"name": "Validate Update",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "c7dc476b-12bd-faf7-7b24-3f8e4dd433d0",
			"headers": "Authorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Failed Validation message\"] = data.message.match(/[Vv]alidation/);\n}\n\nif (testLevels(tests, data, 'errors', 'array')) {\n    if (testLevels(tests, data.errors[0], 'code', 'string')) {\n        tests[\"Not Null Message\"] = data.errors[0].code.match(/[Nn]ull/);\n    }\n    if (testLevels(tests, data.errors[0], 'field')) {\n        tests[\"The problem is with 'url'\"] = data.errors[0].field === 'url';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477325880494,
			"name": "Register Service - No url",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"method\": \"GET\",\n    \"contractUrl\": \"http://helloContract\",\n    \"isAsynchronous\" : \"false\",\n    \"resourceMetadata\": {\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"{{text description}}\",\n        \"classType\": {\n            \"classification\": \"UNCLASSIFIED\"\n         }\n    }\n}"
		},
		{
			"id": "c84a5cf0-b44c-7aea-d56c-a4a98e54b7dd",
			"headers": "Content-Type: application/json\nAuthorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?perPage=200&sortBy=resourceMetadata.createdOn&order=desc&createdBy=citester",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_service = false;\nvar found_createdBy = true;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'serviceId', 'skip', 'data[]')) {\n            found_service = (found_service || data.data[i].serviceId === postman.getEnvironmentVariable('serviceId'));\n        }\n        if (testLevels(tests, data.data[i], 'resourceMetadata.createdBy', 'skip', 'data[]')) {\n            found_createdBy = (found_createdBy && data.data[i].resourceMetadata.createdBy === 'citester');\n        }\n    }\n}\n\ntests[\"Service found in list\"] = found_service;\ntests[\"All services had specified createdBy\"] = found_createdBy;",
			"currentHelper": "basicAuth",
			"helperAttributes": "{\"id\":\"basic\",\"username\":\"{{API Key}}\",\"password\":\"\",\"saveToRequest\":true}",
			"time": 1477082461495,
			"name": "List Services with userName",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"timestamp": null,
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "cf0fe603-796d-bd1f-fa68-dcc3207c43a6",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Failed Validation message\"] = data.message.match(/[Vv]alidation/);\n}\n\nif (testLevels(tests, data, 'errors', 'array')) {\n    if (testLevels(tests, data.errors[0], 'code', 'string')) {\n        tests[\"Not Null Message\"] = data.errors[0].code.match(/[Nn]ull/);\n    }\n    if (testLevels(tests, data.errors[0], 'field')) {\n        tests[\"The problem is with 'resourceMetadata.classType'\"] = data.errors[0].field === 'resourceMetadata.classType';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477315676471,
			"name": "Register Service - No resourceMetadata.classType",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\n    \"url\": \"https://pzsvc-hello.{{domain}}/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"method\" : \"GET\",\n    \"isAsynchronous\" : \"false\",\n    \"resourceMetadata\": {\n        \"name\": \"pzsvc-hello service\",\n        \"description\": \"{{text description}}\"\n    }\n}"
		},
		{
			"id": "d8bebf66-1119-749f-4087-0a9b28f7e079",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?perPage=200&sortBy=resourceMetadata.createdOn&order=desc",
			"preRequestScript": "console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\nconsole.log(\"< < < < < < < < < < < IMPORTANT > > > > > > > > > > >\");\nconsole.log(\"      These tests represent important features.      \");\nconsole.log(\"Use extreme caution when pushing if these tests fail.\");\nconsole.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_service = false;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'serviceId', 'skip', 'data[]')) {\n            found_service = (found_service || data.data[i].serviceId === postman.getEnvironmentVariable('serviceId'));\n        }\n    }\n}\n\ntests[\"Service found in list\"] = found_service;",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477327432571,
			"name": "List Services",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		},
		{
			"id": "da10afab-5091-1615-62f0-7c430908d2fd",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Deleted Service - Job Status');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Error') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.message', 'string')) {\n            tests[\"Pending Bug #9490\"] = false;\n        }\n        if (testLevels(tests, data, 'data.result.statusCode')) {\n            tests[\"Pending Bug #9490\"] = false;\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}\nif (testLevels(tests, data, 'data.createdBy')) {\n    tests[\"Created by 'citester'\"] = data.data.createdBy === 'citester';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477323071634,
			"name": "Deleted Service - Job Status",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "e834f0f8-c36c-3201-fd12-d32a53c2d148",
			"headers": "Authorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/foo",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Not Found Message\"] = data.message.match(/no.*found/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type (Bug #9332)\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477327200224,
			"name": "Job Not Found - POST",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "ed21ad5d-7a94-0fca-e9a7-8407eadadb2c",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var wait = eval(postman.getEnvironmentVariable('wait'));\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.status')) {\n    if (data.data.status === 'Running' || data.data.status === 'Submitted') {\n        if (postman.getEnvironmentVariable('retry_loop') < postman.getEnvironmentVariable('max_retries')) {\n            postman.setEnvironmentVariable('retry_loop', parseInt(postman.getEnvironmentVariable('retry_loop')) + 1);\n            postman.setNextRequest('Reenable - Check Job Status');\n            wait(1000);\n        }\n        else {\n            tests[\"Job finished in time\"] = false;\n            postman.setEnvironmentVariable('retry_loop',0);\n        }\n    }\n    else if (data.data.status === 'Success') {\n        postman.setEnvironmentVariable('retry_loop',0);\n        tests[\"Job finished in time\"] = true;\n        if (testLevels(tests, data, 'data.result.dataId')) {\n            postman.setEnvironmentVariable(\"dataId\", data.data.result.dataId);\n        }\n    }\n    else {\n        tests[\"status should not be \" + data.data.status] = false;\n        postman.setEnvironmentVariable('retry_loop',0);\n    }\n}\nif (testLevels(tests, data, 'data.createdBy')) {\n    tests[\"Created by 'citester'\"] = data.data.createdBy === 'citester';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477321099332,
			"name": "Reenable - Check Job Status",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623"
		},
		{
			"id": "edd57179-6da4-ce97-f66e-6cd52eb43fa0",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?order=foo",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 400 (Bug #7542)\"] = responseCode.code === 400;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Problem with order parameter\"] = data.message.match(/order/i);\n    tests[\"Needs to be 'asc' or 'desc'\"] = data.message.match(/asc/i) && data.message.match(/desc/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477312425425,
			"name": "List Services - Bad order",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "f06dd39a-63e5-1f0c-6e81-1cf2f4a48e4c",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service/{{serviceId_cancel}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Not found message\"] = data.message.match(/no.*found/i);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476984612997,
			"name": "Deleted Service - GET",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "f1ca1948-fba2-fc47-37fb-b502e75dd78b",
			"headers": "Authorization: Basic YjdkMTUzZWMtMjQ4MC00ZGEzLTg0ZjctMDE0NWNmNTlhMjk4Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/{{jobId_rerun}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 400 (Bug #9332)\"] = responseCode.code === 400;\n\nif (testLevels(tests, data, 'data.message', 'string')) {\n    tests[\"'No Longer Running' message\"] = data.data.message.match(/no.*run/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type (Bug #9332)\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477321361116,
			"name": "Cancel Completed Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "f3ed3487-0058-2e5c-07d4-abf6b3a7923c",
			"headers": "Content-Type: application/json\nAuthorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 201\"] = responseCode.code === 201;\nvar data = JSON.parse(responseBody);\nif (testLevels(tests, data, 'data.jobId', 'string')) {\n    tests[\"GUID created for jobId\"] = data.data.jobId.match(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/);\n    postman.setEnvironmentVariable(\"jobId\",data.data.jobId);\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1476980927685,
			"name": "Cancelling Job - Create Job",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"rawModeData": "{\r\n  \"data\": {\r\n      \"dataInputs\": {},\r\n      \"dataOutput\": [{ \"mimeType\":\"application/json\", \"type\":\"text\" }],\r\n      \"serviceId\": \"{{serviceId_cancel}}\"\r\n  },\r\n  \"type\": \"execute-service\"\r\n}"
		},
		{
			"id": "f5b67f48-2dcb-b8f9-3c4f-9b87e911c3da",
			"headers": "Authorization: Basic YmY5MDViODItNGMxYi00ZDhhLWJiMGYtZGM0MjQyOGJhOTU2Og==\nContent-Type: application/json\n",
			"url": "https://pz-gateway.{{domain}}/service",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Failed Validation message\"] = data.message.match(/[Vv]alidation/);\n}\n\nif (testLevels(tests, data, 'errors', 'array')) {\n    if (testLevels(tests, data.errors[0], 'code', 'string')) {\n        tests[\"Not Null Message\"] = data.errors[0].code.match(/[Nn]ull/);\n    }\n    if (testLevels(tests, data.errors[0], 'field')) {\n        tests[\"The problem is with 'resourceMetadata'\"] = data.errors[0].field === 'resourceMetadata';\n    }\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477315093576,
			"name": "Register Service - No resourceMetadata",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"rawModeData": "{\n    \"url\": \"https://pzsvc-hello.{{domain}}/\",\n    \"contractUrl\": \"http://helloContract\",\n    \"method\" : \"GET\",\n    \"isAsynchronous\" : \"false\"\n}"
		},
		{
			"id": "f6eda7c9-4f59-09f3-7805-b69f1e411e67",
			"headers": "Authorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/job/foo",
			"preRequestScript": "console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\nconsole.log(\"< < < < < < < < < < < < LOW > > > > > > > > > > > \");\nconsole.log(\"  These tests represent less-important features.  \");\nconsole.log(\"More attention is given to options and edge cases.\");\nconsole.log(\"You may push if these tests fail, but be careful. \");\nconsole.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\nif (testLevels(tests, data, 'message', 'string')) {\n    tests[\"Not Found Message\"] = data.message.match(/no.*found/i);\n}\nif (testLevels(tests, data, 'type')) {\n    tests[\"Error Type (Bug #9332)\"] = data.type === 'error';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477327448455,
			"name": "Job Not Found - GET",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "fcab329f-ad50-0286-7287-0fcad98b71cd",
			"headers": "Authorization: Basic YjdkMTUzZWMtMjQ4MC00ZGEzLTg0ZjctMDE0NWNmNTlhMjk4Og==\n",
			"url": "https://pz-gateway.{{domain}}/data/{{dataId}}",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\nvar testLevels = eval(postman.getEnvironmentVariable('testLevels'));\n\nif (testLevels(tests, data, 'data.dataType.content', 'string')) {\n    tests[\"Hello Service was executed\"] = data.data.dataType.content.match(/h(ello|i)/i);\n    tests[\"Rerunning Job yields the same data\"] = data.data.dataType.content === postman.getEnvironmentVariable('Repeat Job Check')\n}\nif (testLevels(tests, data, 'data.metadata.createdBy')) {\n    tests[\"Created by 'citester' (Bug #8978)\"] = data.data.metadata.createdBy === 'citester';\n}",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "{{API Key}}",
				"password": "",
				"saveToRequest": true
			},
			"time": 1477080618840,
			"name": "Rerun - Check Data",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": []
		},
		{
			"id": "fd9d2b67-b2f9-93e2-9652-d0e31be7e659",
			"headers": "Content-Type: application/json\nAuthorization: Basic ODU4OTJhNjYtN2ZkMS00OWUzLWI4NDAtYzEyMGViMmM5ODU2Og==\n",
			"url": "https://pz-gateway.{{domain}}/service?perPage=200&sortBy=resourceMetadata.createdOn&order=desc&createdBy=citester&keyword=integration",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var testLevels = eval(postman.getEnvironmentVariable('testLevels'));\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\n\nvar found_service = false;\nvar found_createdBy = true;\nvar found_keyword = true;\n\nif (testLevels(tests, data, 'data', 'array')) {\n    for (i = 0; i < data.data.length; i++) {\n        if (testLevels(tests, data.data[i], 'serviceId', 'skip', 'data[]')) {\n            found_service = (found_service || data.data[i].serviceId === postman.getEnvironmentVariable('serviceId'));\n        }\n        if (testLevels(tests, data.data[i], 'resourceMetadata.createdBy', 'skip', 'data[]')) {\n            found_createdBy = (found_createdBy && data.data[i].resourceMetadata.createdBy === 'citester');\n        }\n        found_keyword = found_keyword && JSON.stringify(data.data[i]).match(/integration/i);\n    }\n}\n\ntests[\"Service found in list\"] = found_service;\ntests[\"All services had specified createdBy\"] = found_createdBy;\ntests[\"All services had specified keyword\"] = found_keyword;",
			"currentHelper": "basicAuth",
			"helperAttributes": "{\"id\":\"basic\",\"username\":\"{{API Key}}\",\"password\":\"\",\"saveToRequest\":true}",
			"time": 1477082484412,
			"name": "List Services with userName and keyword",
			"description": "",
			"collectionId": "cd22abe9-ce24-1562-5ecc-8a24224f8c2c",
			"responses": [],
			"folder": "77205174-4d78-0434-2e54-a9eae4174623",
			"timestamp": null,
			"rawModeData": "{\r\n\t\"name\": \"{{$timestamp}}\",\r\n\t\"mapping\": {\r\n\t\t\"dataId\": \"string\",\r\n\t\t\"dataType\": \"string\",\r\n\t\t\"epsg\": \"short\",\r\n\t\t\"minX\": \"long\",\r\n\t\t\"minY\": \"long\",\r\n\t\t\"maxX\": \"long\",\r\n\t\t\"maxY\": \"long\",\r\n\t\t\"hosted\": \"boolean\"\r\n\t}\r\n}\t"
		}
	]
}